#Events dealing with coming of age

namespace = arcane_coming_of_age

#Learning - Vanilla Event
#Stewardship - Vanilla Event
#Martial - Vanilla Event
#Intrigue - Vanilla Event
#Diplomacy - Vanilla Event
#Arcane - Handled Here


arcane_coming_of_age.0001 = {
    title = arcane_coming_of_age.0001.t
    desc = {
		triggered_desc = {
			trigger = {
				exists = scope:educator
			}
			desc = {
				first_valid = {
					triggered_desc = {
						trigger = {
							has_character_flag = studied_at_university
						}
						desc = arcane_coming_of_age.0001.educator_university
					}
					desc = arcane_coming_of_age.0001.educator
				}
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					has_trait_rank = {
						trait = education_arcane
						rank = 1
					}
				}
				desc = {
					desc = arcane_coming_of_age.0001.desc1
					first_valid = {
						triggered_desc = {
							trigger = {
								has_arcane_education_affinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc1_good_trait
						}
						triggered_desc = {
							trigger = {
								has_arcane_education_disaffinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc1_bad_trait
						}
						desc = arcane_coming_of_age.0001.desc1_fallback_trait
					}
				}
			}
			triggered_desc = {
				trigger = {
					has_trait_rank = {
						trait = education_learning
						rank = 2
					}
				}
				desc = {
					desc = arcane_coming_of_age.0001.desc2
					first_valid = {
						triggered_desc = {
							trigger = {
								has_arcane_education_affinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc2_good_trait
						}
						triggered_desc = {
							trigger = {
								has_arcane_education_disaffinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc2_bad_trait
						}
						desc = arcane_coming_of_age.0001.desc2_fallback_trait
					}
				}
			}
			triggered_desc = {
				trigger = {
					has_trait_rank = {
						trait = education_learning
						rank = 3
					}
				}
				desc = {
					desc = arcane_coming_of_age.0001.desc3
					first_valid = {
						triggered_desc = {
							trigger = {
								has_arcane_education_affinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc3_good_trait
						}
						triggered_desc = {
							trigger = {
								has_arcane_education_disaffinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc3_bad_trait
						}
						desc = arcane_coming_of_age.0001.desc3_fallback_trait
					}
				}
			}
			triggered_desc = {
				trigger = {
					has_trait_rank = {
						trait = education_learning
						rank = 4
					}
				}
				desc = {
					desc = arcane_coming_of_age.0001.desc4
					first_valid = {
						triggered_desc = {
							trigger = {
								has_arcane_education_affinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc4_good_trait
						}
						triggered_desc = {
							trigger = {
								has_arcane_education_disaffinity_childhood_trait_trigger = yes
							}
							desc = arcane_coming_of_age.0001.desc4_bad_trait
						}
						desc = arcane_coming_of_age.0001.desc4_fallback_trait
					}
				}
			}
		}
		first_valid = { #If a learned court owner spouse has improved education
			triggered_desc = {
				trigger = {
					exists = scope:education_rank_patronage_bonus
					scope:education_rank_patronage_bonus = flag:1
				}
				desc = arcane_coming_of_age.0001.patronaged_spouse_plus_1.desc
			}
			triggered_desc = {
				trigger = {
					exists = scope:education_rank_patronage_bonus
					scope:education_rank_patronage_bonus = flag:2_or_more
				}
				desc = arcane_coming_of_age.0001.patronaged_spouse_plus_2_or_more.desc
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						any_relation = { type = friend always = yes }
						exists = var:had_childhood_crush_variable
						exists = var:had_childhood_bully_variable
						exists = var:had_childhood_victim_variable
					}
				}
				desc = {
					desc = arcane_coming_of_age.0001.relationships
					triggered_desc = {
						trigger = {
							any_relation = { type = friend always = yes }
						}
						desc = arcane_coming_of_age.0001.friend
					}
					triggered_desc = {
						trigger = {
							exists = var:had_childhood_crush_variable
						}
						desc = arcane_coming_of_age.0001.crush
					}
					first_valid = {
						triggered_desc = {
							trigger = {
								AND = {
									exists = var:had_childhood_bully_variable
									NOT = { has_character_flag = bully_destroyed_toy }
								}
							}
							desc = arcane_coming_of_age.0001.bully1
						}
						triggered_desc = {
							trigger = {
								AND = {
									exists = var:had_childhood_bully_variable
									has_character_flag = bully_destroyed_toy
								}
							}
							desc = arcane_coming_of_age.0001.bully2
						}
					}
					first_valid = {
						triggered_desc = {
							trigger = {
								AND = {
									exists = var:had_childhood_victim_variable
									scope:victim = {
										NOT = { has_character_flag = bully_destroyed_toy }
									}
								}
							}
							desc = arcane_coming_of_age.0001.victim1
						}
						triggered_desc = {
							trigger = {
								AND = {
									exists = var:had_childhood_victim_variable
									scope:victim = {
										has_character_flag = bully_destroyed_toy
									}
								}
							}
							desc = arcane_coming_of_age.0001.victim2
						}
					}
					triggered_desc = {
						trigger = {
							any_relation = { type = friend always = no }
						}
						desc = arcane_coming_of_age.0001.relationships_end
					}
				}
			}
			triggered_desc = {
				trigger = {
					NOT = {
						OR = {
							any_relation = { type = friend always = yes }
							exists = var:had_childhood_crush_variable
							exists = var:had_childhood_bully_variable
							exists = var:had_childhood_victim_variable
						}
					}
				}
				desc = arcane_coming_of_age.0001.no_relationships
			}
		}
	}
	theme = education
	left_portrait = root

    trigger = {
		has_focus = education_arcane
	}

    immediate = {
		play_music_cue = "mx_cue_positive_effect"
		save_event_targets_from_childhood_effect = yes # Good
		random_relation = {
			type = guardian
			save_scope_as = educator
		}
		results_of_patronage_spouse_education_points_effect = yes #patronage/high arcane spouses of court owner can add points
        results_of_university_education_points_effect = yes #Did you send the child to university? Lucky them!
		dynasty_legacy_education_boost_effect = yes # Adds a few points if you have the second Kin legacy
		calc_arcane_education = yes

		#Chance of improving magic potential (Very Rare) - Two birds with one stone here.
		#if = {
		#	limit = {
		#		OR = {
        #            has_trait = magic_potential_1
        #            has_trait = magic_potential_2
        #            NOT = { has_trait = magic_potential }
        #        }
		#	}
		#	random = {
		#		chance = 5
		#		modifier = {
		#			add = 5
		#			has_trait_rank = {
		#				trait = education_arcane
		#				rank > 1
		#			}
		#		}
		#		modifier = {
		#			add = 5
		#			has_trait_rank = {
		#				trait = education_arcane
		#				rank > 2
		#			}
		#		}
		#		modifier = {
		#			add = 5
		#			has_trait_rank = {
		#				trait = education_arcane
		#				rank > 3
		#			}
		#		}
		#		switch = {
        #            trigger = has_trait
        #            magic_potential_2 = { remove_trait = magic_potential_2 add_trait = magic_potential_3 }
        #            magic_potential_1 = { remove_trait = magic_potential_1 add_trait = magic_potential_2 }
        #        }
        #        if = {
        #            limit = {
        #                NOT = { has_trait = magic_potential }
        #            }
        #            add_trait = magic_potential_1
        #        }
        #        if = {
        #            limit = {
        #                is_ai = no # Because who cares otherwise?
        #            }
        #            add_character_flag = magical_prodigy.0002
		#			trigger_event = arcane_coming_of_age.0002
        #        }
        #        root.guardian = {
        #            if = {
        #                limit = {
        #                    is_ai = no # Because who cares otherwise?
		#					NOR = {
		#						root.guardian = this # Don't send it twice
		#						root.guardian = this # Don't send it twice
		#					}
        #                }
        #            	trigger_event = arcane_coming_of_age.0002
		#			}
        #        }
        #        root.father = {
        #            if = {
        #                limit = {
        #                    is_ai = no # Because who cares otherwise?
        #                }
        #            }
        #            trigger_event = arcane_coming_of_age.0002
        #        }
        #        root.mother = {
        #            if = {
        #                limit = {
        #                    is_ai = no # Because who cares otherwise?
        #                }
        #            }
        #            trigger_event = arcane_coming_of_age.0002
        #        }
		#	}
		#}
		save_childhood_trait_as_variable_effect = yes
		education_complete_notification_effect = yes
		wrap_up_education_effect = yes
		custom_tooltip_arcane_coming_of_age_effect = yes
		show_as_tooltip = { remove_variables_and_trait_coming_of_age_effect = yes }#To give a good tooltip
	}

    option = {
		name = arcane_coming_of_age.0001.a
	}

	after = {
		remove_variable = education_learning_variable
		hidden_effect = { remove_variables_and_trait_coming_of_age_effect = yes }
	}
}

# Just a notification that magic potential has grown - Goes to child, mother, father, and guardian
arcane_coming_of_age.0002 = {
    title = arcane_coming_of_age.0002.t
    desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = magical_prodigy.0002
				}
				desc = arcane_coming_of_age.0002.desc.a
			}
			triggered_desc = {
				trigger = {
					NOT = { has_character_flag = magical_prodigy.0002 }
				}
				desc = arcane_coming_of_age.0002.desc.b
			}
		}
	}
	theme = education
	left_portrait = root

    option = {
		name = arcane_coming_of_age.0002.a
		hidden_effect = {
			remove_character_flag = magical_prodigy.0002
		}
	}
}

# Removes the focus without overwriting vanilla.
arcane_coming_of_age.0003 = {
	hidden = yes
	trigger = {
		has_focus = education_arcane
	}
	immediate = {
		set_focus = no
	}
}