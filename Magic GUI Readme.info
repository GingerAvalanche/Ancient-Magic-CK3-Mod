####################################
###  Implementing the Magic GUI  ###
###          README              ###
###   by Caden335 and Ginger     ###
####################################

##### INDEX OF THIS FILE #####
1. Introduction

2. Additions
  2a. How to add a new spell to the system
  2b. How to add a new spell category

3. File References
  3a. Files

##### 1. Introduction ######
This magic spellbook system is intended to be as intuitive and painless a method for adding new spells as
we could make it. In CK3, that can be difficult, but hopefully it works out. This system really only
involves the spellbook and casting of spells, mechanisms to unlock spells are left as an exercise to the
reader. Though traditionally they have been lifestyle perks, that may change if I ever decide to implement
a spell advancement system

##### 2. Additions #####
### 2a. How to add a new spell category
* 'common/scripted_effects/magic_base_effects.txt'
  - <spell_category> - name of the category
  - <spell_category>_spells_list - names of spells that go into the given category

* 'localization/english/magic_gui_l_english.yml'
  - <spell_category>_category - display name of the category

* 'gfx/magic'
  - add artwork for the category
  - should be 80x80

* 'gui/magic_texticons.gui'
  - add an icon entry for your new category

### 2b. How to add a new spell
* 'common/scripted_effects/magic_base_effects.txt'
Add an entry to one of the category lists

* 'common/scripted_effects/magic_gui_effects.txt'
If your spell has a list of options for a player to choose:
  - add an effect to generate that list
    - effect name may be anything, but list must be named <spell_name>_list
  - invoke the effect in 'effect_open_magic_window'
  - clear the list in 'effect_close_magic_window'

* 'common/scripted_triggers/magic_gui_triggers.txt'
If the spell is an aura, add a line for it in 'trigger_magic_is_aura'

* 'common/script_values/magic_cost_values.txt'
Add an entry for the spell:
  - <spell_name>_cost

* 'common/scripted_guis/magic_scripted_gui.txt'
Add four entries for your spell
  - <spell_name>
    - is_shown - whether a given spell target can have this spell cast on them
    - is_valid - whether or not the spell is castable
      - the 'cast spell' button includes an is_shown check, so you don't need to check for those conditions in is_valid
    - effect - the effect the spell has when it is cast
    - scopes:
      - root - character, the caster
      - scope:spell_cost - script_value/CFixedPoint, the cost of casting the spell once. The spell is responsible for deducting the mana from the character! Not available in is_shown
      - scope:spell_target - character, the spell's target
    - vars:
      - root.var:repeat_count - script_value/CFixedPoint, number of times to cast the spell
    - root's variable lists:
      - selected_list_options - list of flags, the options chosen by the player. Still need to use every_in_list even if there's only one option chosen
  - <spell_name>_spellbook
    - is_shown - whether or not the spell will appear in the spell book as an option
    - is_valid - whether or not the spell will be selectable in the spell book (though it's generally better to invalidate casting than selection)
    - scopes:
      - root - character, the caster
      - scope:spell_target - character, the spell's target
  - <spell_name>_has_properties
    - is_shown - whether or not the spell should show the properties window (can repeat/has a list)
    - is_valid - whether or not to show the option to multicast in the properties window
    - scopes:
      - root - character, the caster
  - <spell_name>_has_list
    - is_shown - whether or not to show a list of options in the properties window
    - is_valid - whether or not an individual list option is able to be clicked
    - scopes:
      - root - character, the caster
      - scope:spell_target - character, the spell's target
      - scope:list_option - flag, the option to be displayed. only available in is_valid
    - root's variable lists:
      - selected_list_options - list of flags, currently chosen options by the player. This is all options chosen *previously* - all options whose buttons are highlighted on the screen

* 'localization/english/magic_gui_l_english.yml'
 - <spell_name>_gui_name - the name of the spell
 - <spell_name>_desc - spell description
For any list options the spell might have:
 - <option_name>_list_gui_name - name of the option

##### 3. File References #####
### 3a. Files
common/on_action/magic_on_actions.txt: Initializes the spell lists on start
common/script_values/magic_cost_values.txt: The mana costs for all spells
common/scripted_guis/magic_scripted_gui.txt: Contains a few selection scripted guis as well as the unique effects for each spell
common/scripted_effects/magic_base_effects.txt: Holds the location for the base lists of spells and spell categories
common/scripted_triggers/magic_target_triggers.txt: Stores the triggers for which possible people can be targets for your spell
gui/hud.gui: Contains the button to open the window
gui/magic_texticons.gui: Stores the unique category icons
gui/window_magic.gui: The window UI. Be warned, I did abuse Concatenate and variable systems in here
localization/english/magic_gui_l_english.yml: Stores all the loc