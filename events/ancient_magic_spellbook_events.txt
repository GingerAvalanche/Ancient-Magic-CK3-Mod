namespace = ancient_magic_spellbook_events

# School Selection
ancient_magic_spellbook_events.001 = {
	title = ancient_magic_spellbook_events.001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:am_spell_caster = scope:am_spell_target }
				desc = ancient_magic_spellbook_events.001.desc.b
			}
			desc = ancient_magic_spellbook_events.001.desc.a
		}
	}
	theme = magic
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}
	
	immediate = {
		add_character_flag = am_spell_resolution
		# Compatability Measure - Removes all old modifiers (Remove after Next update)
		hidden_effect = {
			remove_all_character_modifier_instances = magic_haste_modifier
			remove_all_character_modifier_instances = beguiling_aura_modifier
			remove_all_character_modifier_instances = enchanting_aura_modifier
			remove_all_character_modifier_instances = glimpse_the_future_modifier
			remove_all_character_modifier_instances = finacial_times_modifier
			remove_all_character_modifier_instances = celerity_modifier
			remove_all_character_modifier_instances = slowness_modifier
			remove_all_character_modifier_instances = mass_slowness_modifier
			remove_all_character_modifier_instances = temporal_manipulation_modifier
			remove_all_character_modifier_instances = flame_aura_modifier
			remove_all_character_modifier_instances = flaming_weapons_modifier
			remove_all_character_modifier_instances = living_earthworks_modifier
			remove_all_character_modifier_instances = control_water_modifier
			remove_all_character_modifier_instances = drought_modifier
			remove_all_character_modifier_instances = elemental_warrior_modifier
			remove_all_character_modifier_instances = aura_of_death_modifier
		}
	}

	option = {
		name = ancient_magic_spellbook_events.001.a
		trigger_event = ancient_magic_spellbook_events.002
	}
	option = {
		name = ancient_magic_spellbook_events.001.b
		trigger_event = ancient_magic_spellbook_events.003
	}
	option = {
		name = ancient_magic_spellbook_events.001.c
		trigger_event = ancient_magic_spellbook_events.004
	}
	option = {
		name = ancient_magic_spellbook_events.001.d
		trigger_event = ancient_magic_spellbook_events.005
	}
	option = {
		name = ancient_magic_spellbook_events.001.e
		trigger_event = ancient_magic_spellbook_events.006
	}
	option = {
		name = ancient_magic_spellbook_events.001.f
		trigger_event = ancient_magic_spellbook_events.007
	}
	option = {
		name = ancient_magic_spellbook_events_close
		
		remove_character_flag = am_spell_resolution
	}
}

# Spell Select Screen
# Chronomancy
ancient_magic_spellbook_events.002 = {
	title = ancient_magic_spellbook_events.002.t
	desc = ancient_magic_spellbook_events.002.desc
	theme = chronomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}
	
	option = {
		name = ancient_magic_spellbook_events.002.a
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		show_as_unavailable = {
			scope:am_spell_target = scope:am_spell_caster # If you can cast the spell, you don't need to.
		}
		trigger_event = ancient_magic_spellbook_events.201
	}
	# Haste
	option = {
		name = ancient_magic_spellbook_events.002.c
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.203
	}
	# Glimpse The Future
	option = {
		name = ancient_magic_spellbook_events.002.d
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.204
	}
	# Financial Times
	option = {
		name = ancient_magic_spellbook_events.002.e
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.205
	}
	# Celerity
	option = {
		name = ancient_magic_spellbook_events.002.f
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.206
	}
	# Slowness
	option = {
		name = ancient_magic_spellbook_events.002.g
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.207
	}
	# Mass Slowness
	option = {
		name = ancient_magic_spellbook_events.002.h
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.208
	}
	# Temporal Manipulation
	option = {
		name = ancient_magic_spellbook_events.002.i
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.209
	}
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.001
	}
}

# Chiromancy
ancient_magic_spellbook_events.003 = {
	title = ancient_magic_spellbook_events.003.t
	desc = ancient_magic_spellbook_events.003.desc
	theme = chiromancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}
	
	option = {
		name = ancient_magic_spellbook_events.003.a
		trigger_event = ancient_magic_spellbook_events.301
	}
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.001
	}
}

# Elomancy
ancient_magic_spellbook_events.004 = {
	title = ancient_magic_spellbook_events.004.t
	desc = ancient_magic_spellbook_events.004.desc
	theme = elomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}
	
	option = {
		name = ancient_magic_spellbook_events.004.a
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.401
	}
	option = {
		name = ancient_magic_spellbook_events.004.b
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.402
	}
	option = {
		name = ancient_magic_spellbook_events.004.c
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.403
	}
	option = {
		name = ancient_magic_spellbook_events.004.d
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.404
	}
	option = {
		name = ancient_magic_spellbook_events.004.e
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.405
	}
	option = {
		name = ancient_magic_spellbook_events.004.f
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.406
	}
	option = {
		name = ancient_magic_spellbook_events.004.g
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.407
	}
	option = {
		name = CASTER_ONLY
		trigger = {
			custom_description = {
				text = auras_and_rituals_target_caster
				NOT = { scope:am_spell_caster = scope:am_spell_target }
				always = no
			}
		}
		show_as_unavailable = {
			always = yes
			NOT = { scope:am_spell_caster = scope:am_spell_target }
		}
	}
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.001
	}
}

# Necromancy
ancient_magic_spellbook_events.005 = {
	title = ancient_magic_spellbook_events.005.t
	desc = ancient_magic_spellbook_events.005.desc
	theme = necromancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = beg
	}
	
	# Create Undead
	option = {
		name = ancient_magic_spellbook_events.005.a
		trigger_event = ancient_magic_spellbook_events.501
	}
	# Pestilence
	option = {
		name = ancient_magic_spellbook_events.005.b
		trigger_event = ancient_magic_spellbook_events.502
	}
	# Consume Life
	option = {
		name = ancient_magic_spellbook_events.005.c
		trigger_event = ancient_magic_spellbook_events.503
	}
	# Aura of Death
	option = {
		name = ancient_magic_spellbook_events.005.d
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.504
	}
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.001
	}
}

# Biomancy
ancient_magic_spellbook_events.006 = {
	title = ancient_magic_spellbook_events.006.t
	desc = ancient_magic_spellbook_events.006.desc
	theme = biomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}
	
	option = {
		name = ancient_magic_spellbook_events.006.a
		trigger_event = ancient_magic_spellbook_events.601 # Manipulate Blood (601 - 604)
	}
	option = {
		name = ancient_magic_spellbook_events.006.e
		trigger = {
			OR = {
				scope:am_spell_caster = scope:am_spell_target
				AND = {
					NOT = { scope:am_spell_caster = scope:am_spell_target }
					scope:am_spell_target = {
						is_pregnant = no # Lets nip this one in the bud
					}
				}
			}
			scope:am_spell_target = {
				age >= 16 # Lets nip this one in the bud
			}
			scope:am_spell_caster = {
				age >= 16 # Shouldn't be possible, but just in case
			}
		}
		show_as_unavailable = {
			OR = {
				scope:am_spell_target = {
					age < 16
				}
				scope:am_spell_caster = {
					age < 16
				}
				AND = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					scope:am_spell_target = {
						is_pregnant = yes
					}
				}
			}
		}
		trigger_event = ancient_magic_spellbook_events.605 # Conception
	}
	#option = {
	#	name = ancient_magic_spellbook_events.006.e
	#	trigger_event = ancient_magic_spellbook_events.606 # Aura of Verdancy (Increases Supply Limit)
	#}
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.001
	}
}

# Mensomancy
ancient_magic_spellbook_events.007 = {
	title = ancient_magic_spellbook_events.007.t
	desc = ancient_magic_spellbook_events.007.desc
	theme = mensomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = paranoia
	}
	
	# Manipulate Mind - Target Only
	option = {
		name = ancient_magic_spellbook_events.007.a
		trigger = {
			NOT = { scope:am_spell_caster = scope:am_spell_target }
		}
		show_as_unavailable = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.701
	}
	# Beguiling Aura - Self Only
	option = {
		name = ancient_magic_spellbook_events.007.c
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.702
	}
	# Enchanting Aura - Self Only
	option = {
		name = ancient_magic_spellbook_events.007.d
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
		}
		trigger_event = ancient_magic_spellbook_events.703
	}
	# Back
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.001
	}
}

#time spells

# Change Aging
ancient_magic_spellbook_events.201 = {
	title = ancient_magic_spellbook_events.201.t
	desc = {
		# Common opening...
		desc = ancient_magic_spellbook_events.201.desc
		# Are we talking to an immortal?
		triggered_desc = {
			trigger = {
				scope:am_spell_target = {
					is_immortal = yes
				}
			}
			desc = ancient_magic_spellbook_events.201.desc.a.x
		}
		triggered_desc = {
			trigger = {
				scope:am_spell_target = {
					is_immortal = no
				}
			}
			desc = ancient_magic_spellbook_events.201.desc.b.x
		}
		
		# Did they gain immortality from this spell?
		triggered_desc = {
			trigger = {
				scope:am_spell_target = {
					has_trait = immortal
				}
			}
			desc = ancient_magic_spellbook_events.201.desc.x.a
		}
		
		# Are they a líché?
		triggered_desc = {
			trigger = {
				scope:am_spell_target = {
					has_trait = undead
				}
			}
			desc = ancient_magic_spellbook_events.201.desc.x.b
		}

		# Are they innately immortal?
		triggered_desc = {
			trigger = {
				scope:am_spell_target = {
					has_trait = master_of_time
					NOT = { has_trait = undead }
				}
			}
			desc = ancient_magic_spellbook_events.201.desc.x.c
		}

		# Do we not know what they are?
		triggered_desc = {
			trigger = {
				scope:am_spell_target = {
					is_immortal = yes
					NOT = { has_trait = undead }
					NOT = { has_trait = immortal }
					NOT = { has_trait = master_of_time }
				}
			}
			desc = ancient_magic_spellbook_events.201.desc.x.d
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = ecstasy
	}

	immediate = {
		scope:am_spell_caster = {
			if = {
				limit = {
					var:mana < 500
				}
				add_character_flag = casting_low_mana_spell
			}
			if = {
				limit = {
					NOT = { has_perk = master_of_time_perk }
				}
				add_character_flag = casting_low_skill_spell
			}
		}
	}

	# Stop Aging
	option = {
		name = ancient_magic_spellbook_events.201.a
		trigger = {
			scope:am_spell_target = {
				is_immortal = no
			}
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				is_immortal = yes
			}
		}
		scope:am_spell_caster = {
			add_character_flag = casting_halt_aging_spell
			trigger_event = ancient_magic_spellbook_events.202
		}
	}

	# Restart Aging
	option = {
		name = ancient_magic_spellbook_events.201.b
		trigger = {
			scope:am_spell_target = {
				is_immortal = yes
				#NOT = { has_trait = undead }
			}
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				is_immortal = no
			}
		}
		scope:am_spell_caster = {
			add_character_flag = casting_restart_aging_spell
			trigger_event = ancient_magic_spellbook_events.202
		}
	}

	# You messed up son. You took the easy way to immortality...
	#option = {
	#	name = ancient_magic_spellbook_events.201.c
	#	trigger = {
	#		scope:am_spell_target = {
	#			has_trait = undead
	#		}
	#		has_game_rule = undead_can_be_revived
	#	}
	#	# Triggers an event to undo your undeath (WIP)
	#}

	option = {
		name = ancient_magic_spellbook_events_back
		remove_character_flag = casting_low_mana_spell
		remove_character_flag = casting_low_skill_spell
		trigger_event = ancient_magic_spellbook_events.002
	}
}

ancient_magic_spellbook_events.202 = {
	title = ancient_magic_spellbook_events.201.t # Intentional
	desc = {
		# Is the character immortal? If so, how does that affect your goal?
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = casting_halt_aging_spell
					NOR = {
						has_character_flag = casting_low_mana_spell
						has_character_flag = casting_low_skill_spell
					}
				}
				desc = ancient_magic_spellbook_events.202.desc.a
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_restart_aging_spell
					NOR = {
						has_character_flag = casting_low_mana_spell
						has_character_flag = casting_low_skill_spell
					}
					scope:am_spell_target = {
						has_trait = immortal
					}
				}
				desc = ancient_magic_spellbook_events.202.desc.b
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_restart_aging_spell
					NOR = {
						has_character_flag = casting_low_mana_spell
						has_character_flag = casting_low_skill_spell
					}
					scope:am_spell_target = {
						has_trait = master_of_time
					}
				}
				desc = ancient_magic_spellbook_events.202.desc.c
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_restart_aging_spell
					NOR = {
						has_character_flag = casting_low_mana_spell
						has_character_flag = casting_low_skill_spell
					}
					scope:am_spell_target = {
						is_unliving_immortal = yes
					}
				}
				desc = ancient_magic_spellbook_events.202.desc.d
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_restart_aging_spell
					NOR = {
						has_character_flag = casting_low_mana_spell
						has_character_flag = casting_low_skill_spell
					}
					scope:am_spell_target = {
						NOR = {
							is_immortal = yes
							is_living_immortal = no
							is_unliving_immortal = no
						}
					}
				}
				desc = ancient_magic_spellbook_events.202.desc.e
			}

			# Do you have the skill, but not enough mana?
			triggered_desc = {
				trigger = {
					has_character_flag = casting_low_mana_spell
					NOT = { has_character_flag = casting_low_skill_spell }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Do you have enough mana, but not the skill?
			triggered_desc = {
				trigger = {
					has_character_flag = casting_low_skill_spell
					NOT = { has_character_flag = casting_low_mana_spell }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			# Do you have neither the mana or the skill?
			triggered_desc = {
				trigger = {
					has_character_flag = casting_low_mana_spell
					has_character_flag = casting_low_skill_spell
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = ecstasy
	}
	
	option = {
		name = ancient_magic_spellbook_events_cast
		trigger = {
			scope:am_spell_caster = {
				custom_description = {
					text = casting_low_mana_spell
					NOT = { has_character_flag = casting_low_mana_spell }
				}
				custom_description = {
					text = casting_low_skill_spell
					NOT = { has_character_flag = casting_low_skill_spell }
				}
				custom_description = {
					text = casting_null_spell
					has_character_flag = casting_halt_aging_spell
				}
			}
			scope:am_spell_target = {
				NOT = { has_trait = immortal }
			}
		}
		show_as_unavailable = {
			OR = {
				scope:am_spell_caster = {
					OR = {
						custom_description = {
							text = casting_low_mana_spell
							has_character_flag = casting_low_mana_spell
						}
						custom_description = {
							text = casting_low_skill_spell
							has_character_flag = casting_low_skill_spell
						}
					}
				}
				scope:am_spell_target = {
					has_trait = immortal
				}
			}
			custom_description = {
				text = casting_null_spell
				has_character_flag = casting_halt_aging_spell
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -500 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = casting_restart_aging_spell
			remove_character_flag = casting_halt_aging_spell
		}
		scope:am_spell_target = {
			add_trait = immortal
		}
	}

	option = {
		name = ancient_magic_spellbook_events_cast
		trigger = {
			scope:am_spell_caster = {
				custom_description = {
					text = casting_low_mana_spell
					NOT = { has_character_flag = casting_low_mana_spell }
				}
				custom_description = {
					text = casting_low_skill_spell
					NOT = { has_character_flag = casting_low_skill_spell }
				}
				custom_description = {
					text = casting_null_spell
					has_character_flag = casting_restart_aging_spell
				}
			}
			scope:am_spell_target = {
				has_trait = immortal
			}
		}
		show_as_unavailable = {
			OR = {
				scope:am_spell_caster = {
					OR = {
						custom_description = {
							text = casting_low_mana_spell
							has_character_flag = casting_low_mana_spell
						}
						custom_description = {
							text = casting_low_skill_spell
							has_character_flag = casting_low_skill_spell
						}
					}
				}
				scope:am_spell_target = {
					NOT = { has_trait = immortal }
				}
			}
			custom_description = {
				text = casting_null_spell
				has_character_flag = casting_restart_aging_spell
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -500 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = casting_restart_aging_spell
			remove_character_flag = casting_halt_aging_spell
		}
		scope:am_spell_target = {
			remove_trait = immortal
		}
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		remove_character_flag = casting_restart_aging_spell
		remove_character_flag = casting_halt_aging_spell
		trigger_event = ancient_magic_spellbook_events.201
	}
}

# Haste
ancient_magic_spellbook_events.203 = {
	title = ancient_magic_spellbook_events.203.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = mass_celerity_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = mass_celerity_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = magic_haste } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = magic_haste } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = magic_haste }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.203.desc
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = magic_haste } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = mass_celerity_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = magic_haste } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = mass_celerity_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = magic_haste }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = magic_haste }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = magic_haste }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.002

	}
}

# Glimpse the Future
ancient_magic_spellbook_events.204 = {
	title = ancient_magic_spellbook_events.204.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = glimpse_the_future_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = glimpse_the_future_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = glimpse_the_future } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = glimpse_the_future } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = glimpse_the_future }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.204.desc
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = glimpse_the_future } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = glimpse_the_future_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = glimpse_the_future } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = glimpse_the_future_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = glimpse_the_future }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = glimpse_the_future }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = glimpse_the_future }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.002
	}
}

# Financial Times
ancient_magic_spellbook_events.205 = {
	title = ancient_magic_spellbook_events.205.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = finacial_times_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = finacial_times_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = financial_times } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = financial_times } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = financial_times }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.205.desc
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = financial_times }}
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = finacial_times_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = financial_times } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = finacial_times_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = financial_times }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = financial_times }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = financial_times }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.002
	}
}

# Celerity
ancient_magic_spellbook_events.206 = {
	title = ancient_magic_spellbook_events.206.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = celerity_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = celerity_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = celerity } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = celerity } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = celerity }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.206.desc
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = celerity } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = celerity_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = celerity } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = celerity_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = celerity }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = celerity }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = celerity }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.002
	}
}

# Slowness
ancient_magic_spellbook_events.207 = {
	title = ancient_magic_spellbook_events.207.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = slowness_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = slowness_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = slowness } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = slowness } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = slowness }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.207.desc
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = slowness } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = slowness_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = slowness } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = slowness_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = slowness }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = slowness }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = slowness }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.002
	}
}

# Mass Slowness
ancient_magic_spellbook_events.208 = {
	title = ancient_magic_spellbook_events.208.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = mass_slowness_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = mass_slowness_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = mass_slowness } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = mass_slowness } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = mass_slowness }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.208.desc
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = mass_slowness } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = mass_slowness_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = mass_slowness } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = mass_slowness_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = mass_slowness }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = mass_slowness }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = mass_slowness}

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.002
	}
}

# Temporal Manipulation
ancient_magic_spellbook_events.209 = {
	title = ancient_magic_spellbook_events.209.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 30
					}
					NOT = { has_perk = temporal_manipulation_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = temporal_manipulation_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = temporal_manipulation } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 30
					NOT = { has_any_spell_aura_modifier = { AURA = temporal_manipulation } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = temporal_manipulation }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.209.desc
		}
	}
	theme = chronomancy
	left_portrait = {
		character = scope:am_spell_caster
		animation = ecstasy
	}
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = temporal_manipulation } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 30
			}
			has_perk = temporal_manipulation_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = temporal_manipulation } }
			OR = {
				var:mana < 100
				var:mana_gen < 30
				NOT = { has_perk = temporal_manipulation_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -30 }

		add_aura_modifier = { AURA = temporal_manipulation }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = temporal_manipulation }
		}

		change_mana_gen = { VALUE = 30 }

		remove_aura_modifier = { AURA = temporal_manipulation }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.002
	}
}

#life spells

# Heal
ancient_magic_spellbook_events.301 = {
	title = ancient_magic_spellbook_events.301.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill to cast?
			triggered_desc = {
				trigger = {
					var:mana < 50
					NOT = { has_perk = heal_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 50
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = heal_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
		}
		# What ails the target, and can you fix it?
		
		# Common opening string...
		triggered_desc = {
			trigger = {
				var:mana >= 50
				has_perk = heal_perk
			}
			desc = ancient_magic_spellbook_events.301.desc.a.x.x.x
		}

		# Common minor ailment string...
		triggered_desc = {
			trigger = {
				var:mana >= 50
				has_perk = heal_perk
				scope:am_spell_target = {
					am_has_minor_illness = yes
				}
			}
			desc = ancient_magic_spellbook_events.301.desc.a.a.x.x
		}
		# Can you fix the minor ailment...?
		first_valid = {
			# Minor Ailments...
			triggered_desc = {
				trigger = {
					var:mana >= 50
					has_perk = heal_perk
					scope:am_spell_target = {
						am_has_minor_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.a.a.x
			}
		}
		# Common greater ailment string...
		triggered_desc = {
			trigger = {
				var:mana >= 50
				has_perk = heal_perk
				scope:am_spell_target = {
					am_has_greater_illness = yes
				}
			}
			desc = ancient_magic_spellbook_events.301.desc.a.b.x.x
		}
		# Greater Ailment...
		first_valid = {
			# Not enough mana or skill...
			triggered_desc = {
				trigger = {
					var:mana < 100
					var:mana >= 50
					has_perk = heal_perk
					NOT = { has_perk = greater_heal_perk }
					scope:am_spell_target = {
						am_has_greater_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.b.a.x
			}
			# Not enough mana...
			triggered_desc = {
				trigger = {
					var:mana < 100
					var:mana >= 50
					has_perk = heal_perk
					has_perk = greater_heal_perk
					scope:am_spell_target = {
						am_has_greater_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.b.b.x
			}
			# Not enough skill...
			triggered_desc = {
				trigger = {
					var:mana >= 100
					has_perk = heal_perk
					NOT = { has_perk = greater_heal_perk }
					scope:am_spell_target = {
						am_has_greater_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.b.c.x
			}
			# Can heal the greater illness...
			triggered_desc = {
				trigger = {
					var:mana >= 100
					has_perk = heal_perk
					has_perk = greater_heal_perk
					scope:am_spell_target = {
						am_has_greater_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.b.d.x
			}
		}
			
		# Common critical ailment string...
		triggered_desc = {
			trigger = {
				var:mana >= 50
				has_perk = heal_perk
				scope:am_spell_target = {
					am_has_critical_illness = yes
				}
			}
			desc = ancient_magic_spellbook_events.301.desc.a.c.x.x
		}

		# Critical Ailment...
		first_valid = {
			# Not enough mana or skill...
			triggered_desc = {
				trigger = {
					var:mana < 200
					var:mana >= 50
					has_perk = heal_perk
					NOT = { has_trait = avatar_of_life }
					scope:am_spell_target = {
						am_has_critical_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.c.a.x
			}
			# Not enough mana...
			triggered_desc = {
				trigger = {
					var:mana < 200
					var:mana >= 50
					has_perk = heal_perk
					has_trait = avatar_of_life
					scope:am_spell_target = {
						am_has_critical_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.c.b.x
			}
			# Not enough skill...
			triggered_desc = {
				trigger = {
					var:mana >= 200
					has_perk = heal_perk
					NOT = { has_trait = avatar_of_life }
					scope:am_spell_target = {
						am_has_critical_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.c.c.x
			}
			# Has been healed of a critical ailment in the last five years
			triggered_desc = {
				trigger = {
					var:mana >= 200
					has_perk = heal_perk
					has_trait = avatar_of_life
					scope:am_spell_target = {
						am_has_critical_illness = yes
						has_character_modifier = full_restoration_modifier
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.c.d.x
			}
			# Can heal the critical illness...
			triggered_desc = {
				trigger = {
					var:mana >= 200
					has_perk = heal_perk
					has_trait = avatar_of_life
					scope:am_spell_target = {
						am_has_critical_illness = yes
					}
				}
				desc = ancient_magic_spellbook_events.301.desc.a.c.e.x
			}
		}
		# Common closing
		triggered_desc = {
			trigger = {
				var:mana >= 50
				has_perk = heal_perk
				scope:am_spell_target = {
					OR = {
						am_has_minor_illness = yes
						AND = {
							scope:am_spell_caster = { var:mana >= 100 has_perk = greater_heal_perk }
							am_has_greater_illness = yes
						}
						AND = {
							scope:am_spell_caster = { var:mana >= 200 has_trait = avatar_of_life }
							NOT = { has_character_modifier = full_restoration_modifier }
							am_has_critical_illness = yes
						}
					}
				}
			}
			desc = ancient_magic_spellbook_events.301.desc.x.x.x.a
		}
	}
	theme = chiromancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = pain
	}
	# Minor Ailments
	option = {
		name = ancient_magic_spellbook_events.301.a
		trigger = {
			scope:am_spell_target = {
				am_has_minor_illness = yes
			}
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 50
			}
			has_perk = heal_perk
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				am_has_minor_illness = yes
			}
			OR = {
				var:mana < 50
				NOT = { has_perk = heal_perk }
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -50 }
			remove_character_flag = am_spell_resolution
		}
		scope:am_spell_target = {
			am_remove_minor_illness = yes
		}
	}
	# <= Greater Ailments
	option = {
		name = ancient_magic_spellbook_events.301.b
		trigger = {
			scope:am_spell_target = {
				am_has_greater_illness = yes
			}
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			has_perk = greater_heal_perk
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				am_has_greater_illness = yes
			}
			OR = {
				var:mana < 100
				NOT = { has_perk = greater_heal_perk }
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -100 }
			remove_character_flag = am_spell_resolution
		}
		scope:am_spell_target = {
			am_remove_minor_illness = yes
			am_remove_greater_illness = yes
		}
	}
	# <= Critical Ailments
	option = {
		name = ancient_magic_spellbook_events.301.c
		trigger = {
			scope:am_spell_target = {
				am_has_critical_illness = yes
				NOT = { has_character_modifier = full_restoration_modifier }
			}
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 200
			}
			has_trait = avatar_of_life
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				am_has_critical_illness = yes
			}
			OR = {
				var:mana < 200
				NOT = { has_trait = avatar_of_life }
				scope:am_spell_target = {
					has_character_modifier = full_restoration_modifier
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -200 }
			remove_character_flag = am_spell_resolution
		}
		scope:am_spell_target = {
			am_remove_minor_illness = yes
			am_remove_greater_illness = yes
			am_remove_critical_illness = yes
			add_character_modifier = {
				modifier = full_restoration_modifier
				years = 5
			}
		}
	}

	option = {
		name = ancient_magic_spellbook_events.301.d
		trigger = {
			always = no
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				am_has_minor_illness = no
				am_has_greater_illness = no
				am_has_critical_illness = no
			}
		}
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.003
	}
}

# Elomancy Spells

# Create Golem
ancient_magic_spellbook_events.401 = {
	title = ancient_magic_spellbook_events.401.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill to cast?
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_perk = golem_creation_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = golem_creation_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
		}
		# Common opening. If you see this you can at least create basic golems...
		triggered_desc = {
			trigger = {
				var:mana >= 100
				has_perk = golem_creation_perk
				NAND = {
					has_character_modifier = golem_cooldown_modifier
					has_character_modifier = lava_golem_cooldown_modifier
				}
			}
			desc = ancient_magic_spellbook_events.401.desc.a.x.x.x.x
		}
		# Is the basic golem spell on cooldown?
		first_valid = {
			# It is not...
			triggered_desc = {
				trigger = {
					var:mana >= 100
					has_perk = golem_creation_perk
					NOT = { has_character_modifier = golem_cooldown_modifier }
					NAND = {
						has_character_modifier = golem_cooldown_modifier
						has_character_modifier = lava_golem_cooldown_modifier
					}
				}
				desc = ancient_magic_spellbook_events.401.desc.a.a.x.x.x
			}
			# It is...
			triggered_desc = {
				trigger = {
					var:mana >= 100
					has_perk = golem_creation_perk
					has_character_modifier = golem_cooldown_modifier
					NOT = { has_character_modifier = lava_golem_cooldown_modifier }
				}
				desc = ancient_magic_spellbook_events.401.desc.a.b.x.x.x
			}
		}
		# Can you create lava golems?
		first_valid = {
			# Can create lava golems...
			triggered_desc = {
				trigger = {
					var:mana >= 400
					has_perk = lord_of_the_elements_perk
					has_perk = golem_creation_perk
					NAND = {
						has_character_modifier = golem_cooldown_modifier
						has_character_modifier = lava_golem_cooldown_modifier
					}
				}
				desc = ancient_magic_spellbook_events.401.desc.a.x.a.x.x
			}
			# Not enough mana or skill to create them...
			triggered_desc = {
				trigger = {
					var:mana >= 100
					var:mana < 400
					has_perk = golem_creation_perk
					NOT = { has_perk = lord_of_the_elements_perk }
					NAND = {
						has_character_modifier = golem_cooldown_modifier
						has_character_modifier = lava_golem_cooldown_modifier
					}
				}
				desc = ancient_magic_spellbook_events.401.desc.a.x.b.x.x
			}
			# Not enough mana to create them...
			triggered_desc = {
				trigger = {
					var:mana >= 100
					var_mana < 400
					has_perk = golem_creation_perk
					has_perk = lord_of_the_elements_perk
					NAND = {
						has_character_modifier = golem_cooldown_modifier
						has_character_modifier = lava_golem_cooldown_modifier
					}
				}
				desc = ancient_magic_spellbook_events.401.desc.a.x.c.x.x
			}
			# Not enough skill to create them...
			triggered_desc = {
				trigger = {
					var:mana >= 400
					has_perk = golem_creation_perk
					has_perk = lord_of_the_elements_perk
					NAND = {
						has_character_modifier = golem_cooldown_modifier
						has_character_modifier = lava_golem_cooldown_modifier
					}
				}
				desc = ancient_magic_spellbook_events.401.desc.a.x.d.x.x
			}
		}
		# Is the lava golem spell on cooldown?
		first_valid = {
			# It is not...
			triggered_desc = {
				trigger = {
					var:mana >= 400
					has_perk = golem_creation_perk
					has_perk = lord_of_the_elements_perk
					NOT = { has_character_modifier = lava_golem_cooldown_modifier }
					NAND = {
						has_character_modifier = golem_cooldown_modifier
						has_character_modifier = lava_golem_cooldown_modifier
					}
				}
				desc = ancient_magic_spellbook_events.401.desc.a.x.a.a.x
			}
			# It is...
			triggered_desc = {
				trigger = {
					var:mana >= 400
					has_perk = golem_creation_perk
					has_perk = lord_of_the_elements_perk
					has_character_modifier = lava_golem_cooldown_modifier
					NOT = { has_character_modifier = golem_cooldown_modifier }
				}
				desc = ancient_magic_spellbook_events.401.desc.a.x.a.b.x
			}
		}
		# Closing if the spell can be cast...
		triggered_desc = {
			trigger = {
				OR = {
					AND = {
						var:mana >= 100
						has_perk = golem_creation_perk
						NOT = { has_character_modifier = golem_cooldown_modifier }
					}
					AND = {
						var:mana >= 400
						has_perk = lord_of_the_elements_perk
						NOT = { has_character_modifier = lava_golem_cooldown_modifier }
					}
				}
			}
			desc = ancient_magic_spellbook_events.401.desc.x.x.x.x.a
		}
		# Closing if the spell can't be cast because of cooldowns...
		triggered_desc = {
			trigger = {
				var:mana >= 100
				has_perk = golem_creation_perk
				has_perk = lord_of_the_elements_perk
				AND = {
					has_character_modifier = golem_cooldown_modifier
					has_character_modifier = lava_golem_cooldown_modifier
				}
			}
			desc = ancient_magic_spellbook_events.401.desc.x.x.x.x.b
		}
	}
	theme = elomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target

	option = {
		name = ancient_magic_spellbook_events.401.a
		trigger = {
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			has_perk = golem_creation_perk
			NOT = { has_character_modifier = golem_cooldown_modifier }
		}
		show_as_unavailable = {
			OR = {
				var:mana < 100
				NOT = { has_perk = golem_creation_perk }
				has_character_modifier = golem_cooldown_modifier
			}
		}
		scope:am_spell_caster = {
			scope:am_spell_caster = {
				change_mana = { VALUE = -100 }
				spawn_army = {
					name = golem_army
					uses_supply = no
					inheritable = no
					men_at_arms = {
						type = golem
						stacks = mage_level
					}
					levy = 0
					location = scope:am_spell_target.location # Makes sense to me...
				}
				add_character_modifier = {
					modifier = golem_cooldown_modifier
					years = 5
				}
				remove_character_flag = am_spell_resolution
			}
		}
	}
	option = {
		name = ancient_magic_spellbook_events.401.b
		trigger = {
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 400
			}
			has_perk = lord_of_the_elements_perk
			NOT = { has_character_modifier = lava_golem_cooldown_modifier }
		}
		show_as_unavailable = {
			OR = {
				var:mana < 400
				NOT = { has_perk = lord_of_the_elements_perk }
				has_character_modifier = lava_golem_cooldown_modifier
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -400 }
			spawn_army = {
				name = lava_golem_army
				uses_supply = no
				inheritable = no
				men_at_arms = {
					type = lava_golem
					stacks = mage_level
				}
				levy = 0
				location = scope:am_spell_target.location # Makes sense to me...
			}
			add_character_modifier = {
				modifier = lava_golem_cooldown_modifier
				years = 5
			}
			remove_character_flag = am_spell_resolution
		}
	}
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.004
	}
}

# Flame Aura
ancient_magic_spellbook_events.402 = {
	title = ancient_magic_spellbook_events.402.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = flame_aura_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = flame_aura_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = flame_aura } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = flame_aura } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = flame_aura }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.402.desc
		}
	}
	theme = elomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = flame_aura } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = flame_aura_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = flame_aura } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = flame_aura_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = flame_aura }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = flame_aura }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = flame_aura }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.004
	}
}

# Flaming Weapons
ancient_magic_spellbook_events.403 = {
	title = ancient_magic_spellbook_events.403.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = flaming_weapons_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = flaming_weapons_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = flaming_weapons } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = flaming_weapons } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = flaming_weapons }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.403.desc
		}
	}
	theme = elomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = flaming_weapons } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = flaming_weapons_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = flaming_weapons } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = flaming_weapons_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = flaming_weapons }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = flaming_weapons }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = flaming_weapons }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.004
	}
}

# Living Earthworks
ancient_magic_spellbook_events.404 = {
	title = ancient_magic_spellbook_events.404.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = living_earthworks_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = living_earthworks_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = living_earthworks } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = living_earthworks } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = living_earthworks }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.404.desc
		}
	}
	theme = elomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = living_earthworks } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = living_earthworks_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = living_earthworks } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = living_earthworks_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = living_earthworks }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = living_earthworks }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = living_earthworks }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.004
	}
}

# Control Water
ancient_magic_spellbook_events.405 = {
	title = ancient_magic_spellbook_events.405.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = control_water_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = control_water_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = control_water } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = control_water } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = control_water }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.405.desc
		}
	}
	theme = elomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = control_water } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = control_water_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = control_water } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = control_water_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = control_water }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = control_water }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = control_water }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.004
	}
}

# Drought
ancient_magic_spellbook_events.406 = {
	title = ancient_magic_spellbook_events.406.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = drought_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = drought_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = drought } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = drought } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = drought }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.406.desc
		}
	}
	theme = elomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = drought } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = drought_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = drought } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = drought_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = drought }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = drought }
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = drought }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.004
	}
}

# Cloak of Elements
ancient_magic_spellbook_events.407 = {
	title = ancient_magic_spellbook_events.407.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 30
					}
					NOT = { has_perk = elemental_warrior_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = elemental_warrior_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = elemental_warrior } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 30
					NOT = { has_any_spell_aura_modifier = { AURA = elemental_warrior } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = elemental_warrior }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.407.desc
		}
	}
	theme = elomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = elemental_warrior } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 30
			}
			has_perk = elemental_warrior_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = elemental_warrior } }
			OR = {
				var:mana < 100
				var:mana_gen < 30
				NOT = { has_perk = elemental_warrior_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -30 }

		add_aura_modifier = { AURA = elemental_warrior }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = elemental_warrior }
		}

		change_mana_gen = { VALUE = 30 }

		remove_aura_modifier = { AURA = elemental_warrior }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.004
	}
}

#death spells

# Create Undead
ancient_magic_spellbook_events.501 = {
	title = ancient_magic_spellbook_events.501.t
	desc = {
		# Are you casting on yourself...? (Description Ends if not...)
		first_valid = {
			# Yes - Continue
			triggered_desc = {
				trigger = {
					scope:am_spell_caster = scope:am_spell_target
				}
				desc = ancient_magic_spellbook_events.501.desc.x.a
			}
			# No - End Desc
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_caster = scope:am_spell_target }
				}
				desc = ancient_magic_spellbook_events.501.desc.x.b
			}
		}
		# Has the caster cast the spell recently...? (Description Ends if yes...)
		first_valid = {
			# No - Continue
			triggered_desc = {
				trigger = {
					NOT = { has_character_modifier = undead_horde_cooldown_modifier }
					scope:am_spell_caster = scope:am_spell_target
				}
				desc = ancient_magic_spellbook_events.501.desc.x.a.a
			}
			# Yes - End Desc
			triggered_desc = {
				trigger = {
					has_character_modifier = undead_horde_cooldown_modifier
					scope:am_spell_caster = scope:am_spell_target
				}
				desc = ancient_magic_spellbook_events.501.desc.x.a.b
			}
		}
		# Do you have enough mana and skill...? (Description Ends if not...)
		first_valid = {
			# Not enough mana or skill - End Desc
			triggered_desc = {
				trigger = {
					var:mana < 200
					NOT = { has_perk = necromancy_perk }
					NOT = { has_character_modifier = undead_horde_cooldown_modifier }
					scope:am_spell_caster = scope:am_spell_target
				}
				desc = ancient_magic_spellbook_events.501.desc.x.a.a.a
			}
			# Not enough mana - End Desc
			triggered_desc = {
				trigger = {
					var:mana < 200
					has_perk = necromancy_perk
					NOT = { has_character_modifier = undead_horde_cooldown_modifier }
					scope:am_spell_caster = scope:am_spell_target
				}
				desc = ancient_magic_spellbook_events.501.desc.x.a.a.b
			}
			triggered_desc = {
				trigger = {
					var:mana >= 200
					NOT = { has_perk = necromancy_perk }
					NOT = { has_character_modifier = undead_horde_cooldown_modifier }
					scope:am_spell_caster = scope:am_spell_target
				}
				desc = ancient_magic_spellbook_events.501.desc.x.a.a.c
			}
			# Yes - Continue
			triggered_desc = {
				trigger = {
					var:mana >= 200
					has_perk = necromancy_perk
					NOT = { has_character_modifier = undead_horde_cooldown_modifier }
					scope:am_spell_caster = scope:am_spell_target
				}
				desc = ancient_magic_spellbook_events.501.desc.x.a.a.d
			}	
		}
		# Common opening for 'create greater undead'...
		first_valid = {
			# Is a 'deacon of death' - Continue
			triggered_desc = {
				trigger = {
					has_perk = deacon_of_death_perk
				}
				desc = ancient_magic_spellbook_events.501.desc.x.x.a
			}
			# Is not a 'deacon of death' - End Desc
			triggered_desc = {
				trigger = {
					NOT = { has_perk = deacon_of_death_perk }
				}
				desc = ancient_magic_spellbook_events.501.desc.x.x.b
			}
		}
		# Is the target already a greater undead?
		first_valid = {
			# Is not undead - Continue
			triggered_desc = {
				trigger = {
					has_perk = deacon_of_death_perk
					scope:am_spell_target = {
						NOT = { has_trait = undead }
					}
				}
				desc = ancient_magic_spellbook_events.501.desc.x.x.a.a
			}
			# Is undead - End Desc
			triggered_desc = {
				trigger = {
					has_perk = deacon_of_death_perk
					scope:am_spell_target = {
						has_trait = undead
					}
				}
				desc = ancient_magic_spellbook_events.501.desc.x.x.a.b
			}
		}
		# Have enough mana?
		first_valid = {
			# Not enough mana - End Desc
			triggered_desc = {
				trigger = {
					var:mana < 600
					has_perk = deacon_of_death_perk
					NOT = { has_character_modifier = undead_horde_cooldown_modifier }
					scope:am_spell_target = {
						NOT = { has_trait = undead }
					}
				}
				desc = ancient_magic_spellbook_events.501.desc.x.x.a.a.a
			}
			# Yes - Continue
			triggered_desc = {
				trigger = {
					var:mana >= 600
					has_perk = deacon_of_death_perk
					NOT = { has_character_modifier = undead_horde_cooldown_modifier }
					scope:am_spell_target = {
						NOT = { has_trait = undead }
					}
				}
				desc = ancient_magic_spellbook_events.501.desc.x.x.a.a.b
			}	
		}
	}
	theme = necromancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = beg
	}

	option = {
		name = ancient_magic_spellbook_events.501.a
		trigger = {
			scope:am_spell_target = scope:am_spell_caster
			has_perk = necromancy_perk
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 200
			}
			NOT = { has_character_modifier = undead_horde_cooldown_modifier }
		}
		show_as_unavailable = {
			OR = {
				NOT = { scope:am_spell_target = scope:am_spell_caster }
				NOT = { has_perk = necromancy_perk }
				var:mana < 200
				has_character_modifier = undead_horde_cooldown_modifier
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -200 }
			remove_character_flag = am_spell_resolution
		}
		scope:am_spell_target = {
			spawn_army = {
				name = undead_horde
				uses_supply = no
				inheritable = no
				men_at_arms = {
					type = undead
					stacks = mage_level
				}
				levy = 0
				location = scope:am_spell_target.location
			}
			add_character_modifier = {
				modifier = undead_horde_cooldown_modifier
				years = 2
			}
		}
	}

	option = {
		name = ancient_magic_spellbook_events.501.b
		trigger = {
			has_perk = deacon_of_death_perk
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 600
			}
			scope:am_spell_target = {
				NOT = { has_trait = undead }
			}
		}
		show_as_unavailable = {
			OR = {
				NOT = { has_perk = deacon_of_death_perk }
				var:mana < 600
				scope:am_spell_target = {
					has_trait = undead
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -600 }
			remove_character_flag = am_spell_resolution
		}
		scope:am_spell_target = {
			custom_description = {
				text = target_becomes_undead
				add_trait = undead
				add_character_flag = immune_to_disease
			}
		}
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.005
	}
}

# Pestilence
ancient_magic_spellbook_events.502 = {
	title = ancient_magic_spellbook_events.502.t
	desc = {
		# Casting on yourself?
		first_valid = {
			# No - Continue
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
				}
				desc = ancient_magic_spellbook_events.502.desc.x.a
			}
			# Yes - End Desc
			triggered_desc = {
				trigger = {
					scope:am_spell_target = scope:am_spell_caster
				}
				desc = ancient_magic_spellbook_events.502.desc.x.b
			}
		}
		# Has Inflict Illness Perk?
		first_valid = {
			# Yes - Continue
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					has_perk = inflict_illness_perk
				}
				desc = ancient_magic_spellbook_events.502.desc.x.a.a
			}
			# No - End Desc
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					NOT = { has_perk = inflict_illness_perk }
				}
				desc = ancient_magic_spellbook_events.502.desc.x.a.b
			}
		}
		# Has plague lord perk?
		triggered_desc = {
			trigger = {
				NOT = { scope:am_spell_target = scope:am_spell_caster }
				has_perk = plague_lord_perk
			}
			desc = ancient_magic_spellbook_events.502.desc.x.a.a.a
		}
		# Has enough mana for either spell?
		first_valid = {
			# Enough mana for illness...
			triggered_desc = {
				trigger = {
					has_perk = inflict_illness_perk
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana >= 50
				}
				desc = ancient_magic_spellbook_events.502.desc.x.a.a.a.a
			}
			# Not enough mana for either...
			triggered_desc = {
				trigger = {
					has_perk = inflict_illness_perk
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana < 50
				}
				desc = ancient_magic_spellbook_events.502.desc.x.a.a.a.b
			}
		}
	}
	theme = necromancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = beg
	}
	
	option = {
		name = ancient_magic_spellbook_events.502.a
		trigger = {
			NOT = { scope:am_spell_caster = scope:am_spell_target }
			scope:am_spell_caster = {
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 50
				}
				has_perk = inflict_illness_perk
			}
			scope:am_spell_target = {
				NOT = { has_trait = ill }
			}
		}
		show_as_unavailable = {
			OR = {
				scope:am_spell_caster = scope:am_spell_target
				scope:am_spell_caster = {
					OR = {
						var:mana < 50
						NOT = { has_perk = inflict_illness_perk }
					}
				}
				scope:am_spell_target = {
					has_trait = ill
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -50 }
			remove_character_flag = am_spell_resolution
		}

		scope:am_spell_target = {
			contract_disease_effect = { DISEASE = ill TREATMENT_EVENT = yes }
		}
	}

	option = {
		name = ancient_magic_spellbook_events.502.b
		trigger = {
			NOT = { scope:am_spell_caster = scope:am_spell_target }
			scope:am_spell_caster = {
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 300
				}
				has_perk = plague_lord_perk
			}
			scope:am_spell_target = {
				NOT = { has_trait = bubonic_plague }
			}
		}
		show_as_unavailable = {
			OR = {
				scope:am_spell_caster = scope:am_spell_target
				scope:am_spell_caster = {
					OR = {
						var:mana < 300
						NOT = { has_perk = plague_lord_perk }
					}
				}
				scope:am_spell_target = {
					has_trait = bubonic_plague
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -300 }
			remove_character_flag = am_spell_resolution
		}

		scope:am_spell_target = {
			contract_disease_effect = { DISEASE = bubonic_plague TREATMENT_EVENT = yes }
		}
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.005
	}
}

# Consume Life
ancient_magic_spellbook_events.503 = {
	title = ancient_magic_spellbook_events.503.t
	desc = {
		# Casting on yourself or character that has already been drained?
		first_valid = {
			# No - Continue
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					scope:am_spell_target = {
						NOT = { has_character_modifier = drained_modifier }
					}
				}
				desc = ancient_magic_spellbook_events.503.desc.x.a
			}
			# Yes - End Desc
			triggered_desc = {
				trigger = {
					scope:am_spell_target = scope:am_spell_caster
				}
				desc = ancient_magic_spellbook_events.503.desc.x.b
			}
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_character_modifier = drained_modifier
					}
				}
				desc = ancient_magic_spellbook_events.503.desc.x.c
			}
		}
		# Has Drain Life Perk?
		first_valid = {
			# Yes - Continue
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					has_perk = drain_life_perk
					scope:am_spell_target = {
						NOT = { has_character_modifier = drained_modifier }
					}
				}
				desc = ancient_magic_spellbook_events.503.desc.x.a.a
			}
			# No - End Desc
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					NOT = { has_perk = drain_life_perk }
					scope:am_spell_target = {
						NOT = { has_character_modifier = drained_modifier }
					}
				}
				desc = ancient_magic_spellbook_events.503.desc.x.a.b
			}
		}
		# Has Death Stare Perk?
		triggered_desc = {
			trigger = {
				NOT = { scope:am_spell_target = scope:am_spell_caster }
				has_perk = death_stare_perk
				scope:am_spell_target = {
					NOT = { has_character_modifier = drained_modifier }
				}
			}
			desc = ancient_magic_spellbook_events.503.desc.x.a.a.a
		}
		triggered_desc = {
			trigger = {
				NOT = { scope:am_spell_target = scope:am_spell_caster }
				has_perk = death_stare_perk
				scope:am_spell_target = {
					has_character_modifier = drained_modifier
				}
			}
			desc = ancient_magic_spellbook_events.503.desc.x.a.a.b
		}
		# Has enough mana for either spell?
		first_valid = {
			# Enough mana for 'drain life'...
			triggered_desc = {
				trigger = {
					has_perk = drain_life_perk
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana >= 50
					scope:am_spell_target = {
						NOT = { has_character_modifier = drained_modifier }
					}
				}
				desc = ancient_magic_spellbook_events.503.desc.x.a.a.a.a
			}
			# Not enough mana for either...
			triggered_desc = {
				trigger = {
					has_perk = drain_life_perk
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana < 50
					scope:am_spell_target = {
						NOT = { has_character_modifier = drained_modifier }
					}
				}
				desc = ancient_magic_spellbook_events.503.desc.x.a.a.a.b
			}
			# Not enough mana to drain completely...
			triggered_desc = {
				trigger = {
					has_perk = death_stare_perk
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana < 600
					scope:am_spell_target = {
						has_character_modifier = drained_modifier
					}
				}
				desc = ancient_magic_spellbook_events.503.desc.x.a.a.a.c
			}
		}
	}
	theme = necromancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = beg
	}
	
	option = {
		name = ancient_magic_spellbook_events.503.a
		trigger = {
			NOT = { scope:am_spell_caster = scope:am_spell_target }
			scope:am_spell_caster = {
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 200
				}
				has_perk = drain_life_perk
			}
			scope:am_spell_target = {
				NOR = {
					has_character_modifier = drained_modifier
					has_trait = undead
					has_trait = immortal
					has_trait = master_of_time
					has_trait = avatar_of_life
				}
			}
		}
		show_as_unavailable = {
			OR = {
				scope:am_spell_caster = scope:am_spell_target
				scope:am_spell_caster = {
					OR = {
						var:mana < 200
						NOT = { has_perk = drain_life_perk }
					}
				}
				scope:am_spell_target = {
					OR = {
						has_character_modifier = drained_modifier
						has_trait = undead
						has_trait = immortal
						has_trait = master_of_time
						has_trait = avatar_of_life
					}
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -200 }
			add_character_modifier = {
				modifier = stolen_lifeforce_modifier
				years = mage_level
			}
			remove_character_flag = am_spell_resolution
		}
		scope:am_spell_target = {
			add_drained_modifier_scope_work_around = { YEARS = mage_level_value_conversion }
		}
	}

	option = {
		name = ancient_magic_spellbook_events.503.b
		trigger = {
			NOT = { scope:am_spell_caster = scope:am_spell_target }
			scope:am_spell_caster = {
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 600
				}
				has_perk = death_stare_perk
			}
			scope:am_spell_target = {
				NOR = {
					has_trait = undead
					has_trait = immortal
					has_trait = master_of_time
					has_trait = avatar_of_life
				}
			}
		}
		show_as_unavailable = {			
			OR = {
				scope:am_spell_caster = scope:am_spell_target
				scope:am_spell_caster = {
					OR = {
						var:mana < 600
						NOT = { has_perk = death_stare_perk }
					} 
				}
				scope:am_spell_target = {
					OR = {
						has_trait = undead
						has_trait = immortal
						has_trait = master_of_time
						has_trait = avatar_of_life
					}
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -600 }
			remove_character_flag = am_spell_resolution
		}

		scope:am_spell_target = {
			death = { death_reason = death_stare }
		}
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.005
	}
}

# Aura of Death
ancient_magic_spellbook_events.504 = {
	title = ancient_magic_spellbook_events.504.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 30
					}
					NOT = { has_perk = aura_of_death_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = aura_of_death_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = aura_of_death } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 30
					NOT = { has_any_spell_aura_modifier = { AURA = aura_of_death } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = aura_of_death }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.504.desc
		}
	}
	theme = necromancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = aura_of_death } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 30
			}
			has_perk = aura_of_death_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = aura_of_death } }
			OR = {
				var:mana < 100
				var:mana_gen < 30
				NOT = { has_perk = aura_of_death_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -30 }

		add_aura_modifier = { AURA = aura_of_death }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = aura_of_death }
		}

		change_mana_gen = { VALUE = 30 }

		remove_aura_modifier = { AURA = aura_of_death }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.005
	}
}

#Biomancy Spells

# Manipulate Blood - Good, Bad, or Ugly?
ancient_magic_spellbook_events.601 = {
	title = ancient_magic_spellbook_events.601.t
	desc = ancient_magic_spellbook_events.601.desc
	theme = biomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}

	# Good
	option = {
		name = ancient_magic_spellbook_events.601.a
		add_character_flag = casting_good_blood_spell
		trigger_event = ancient_magic_spellbook_events.602
	}

	# Bad
	option = {
		name = ancient_magic_spellbook_events.601.b
		add_character_flag = casting_bad_blood_spell
		trigger_event = ancient_magic_spellbook_events.602
	}

	# Ugly
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.006
	}
}

# Manipulate Blood - Choose Trait
ancient_magic_spellbook_events.602 = {
	title = ancient_magic_spellbook_events.602.t
	desc = {
		# Where is this target at, genetically speaking?
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						am_genetic_level >= 9
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.a
			}
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						am_genetic_level >= 6
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.b
			}
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						am_genetic_level >= 3
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.c
			}
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						am_genetic_level >= 0
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.d
			}
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						am_genetic_level <= -9
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.g
			}
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						am_genetic_level <= -6
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.f
			}
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						am_genetic_level <= -3
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.e
			}
		}
		# What is the caster's goal?
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = casting_good_blood_spell
				}
				desc = ancient_magic_spellbook_events.602.desc.x.a
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_bad_blood_spell
				}
				desc = ancient_magic_spellbook_events.602.desc.x.b
			}
		}
		# What is the caster's level of skill?
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = casting_good_blood_spell
					has_perk = architect_of_bloodlines_perk
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.a
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_bad_blood_spell
					has_perk = architect_of_bloodlines_perk
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.b
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_good_blood_spell
					has_perk = perfect_trait_perk
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.c
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_bad_blood_spell
					has_perk = criple_trait_perk
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.d
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_good_blood_spell
					has_perk = improve_trait_perk
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.e
			}
			triggered_desc = {
				trigger = {
					has_character_flag = casting_bad_blood_spell
					has_perk = weaken_trait_perk
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.f
			}
			triggered_desc = {
				trigger = {
					NOR = {
						has_perk = weaken_trait_perk
						has_perk = improve_trait_perk
						has_perk = criple_trait_perk
						has_perk = perfect_trait_perk
						has_perk = architect_of_bloodlines_perk
					}
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.g
			}
		}
		# Is the caster a flesh-sculpter?
		first_valid = {
			triggered_desc = {
				trigger = {
					has_perk = sculpter_of_flesh_perk
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.x.a
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = sculpter_of_flesh_perk }
				}
				desc = ancient_magic_spellbook_events.602.desc.x.x.x.b
			}
		}
	}
	theme = biomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}

	# Beauty
	option = {
		name = ancient_magic_spellbook_events.602.a
		trigger = {
			OR = {
				AND = {
					scope:am_spell_target = {
						am_beauty_level < 3
					}
					has_character_flag = casting_good_blood_spell
				}
				AND = {
					scope:am_spell_target = {
						am_beauty_level > -3
					}
					has_character_flag = casting_bad_blood_spell
				}
			}
		}
		show_as_unavailable = {
			OR = {
				AND = {
					has_character_flag = casting_good_blood_spell
					scope:am_spell_target = {
						am_beauty_level >= 3
					}
				}
				AND = {
					has_character_flag = casting_bad_blood_spell
					scope:am_spell_target = {
						am_beauty_level <= -3
					}
				}
			}
		}
		scope:am_spell_caster = {
			add_character_flag = casting_beauty_blood_spell
			trigger_event = ancient_magic_spellbook_events.603
		}
	}

	# Physique
	option = {
		name = ancient_magic_spellbook_events.602.b
		trigger = {
			OR = {
				AND = {
					scope:am_spell_target = {
						am_physique_level < 3
					}
					has_character_flag = casting_good_blood_spell
				}
				AND = {
					scope:am_spell_target = {
						am_physique_level > -3
					}
					has_character_flag = casting_bad_blood_spell
				}
			}
		}
		show_as_unavailable = {
			OR = {
				AND = {
					has_character_flag = casting_good_blood_spell
					scope:am_spell_target = {
						am_beauty_level >= 3
					}
				}
				AND = {
					has_character_flag = casting_bad_blood_spell
					scope:am_spell_target = {
						am_beauty_level <= -3
					}
				}
			}
		}
		scope:am_spell_caster = {
			add_character_flag = casting_physique_blood_spell
			trigger_event = ancient_magic_spellbook_events.603
		}
	}

	# Intellect
	option = {
		name = ancient_magic_spellbook_events.602.c
		trigger = {
			OR = {
				AND = {
					scope:am_spell_target = {
						am_intellect_level < 3
					}
					has_character_flag = casting_good_blood_spell
				}
				AND = {
					scope:am_spell_target = {
						am_intellect_level > -3
					}
					has_character_flag = casting_bad_blood_spell
				}
			}
		}
		show_as_unavailable = {
			OR = {
				AND = {
					has_character_flag = casting_good_blood_spell
					scope:am_spell_target = {
						am_beauty_level >= 3
					}
				}
				AND = {
					has_character_flag = casting_bad_blood_spell
					scope:am_spell_target = {
						am_beauty_level <= -3
					}
				}
			}
		}
		scope:am_spell_caster = {
			add_character_flag = casting_intellect_blood_spell
			trigger_event = ancient_magic_spellbook_events.603
		}
	}
	# Other (Flesh Sculpting)
	option = {
		name = ancient_magic_spellbook_events.602.d
		trigger = {
			has_perk = sculpter_of_flesh_perk
		}
		show_as_unavailable = {
			NOT = { has_perk = sculpter_of_flesh_perk }
		}
		scope:am_spell_caster = {
			add_character_flag = casting_other_blood_spell
			trigger_event = ancient_magic_spellbook_events.604
		}
	}

	option = {
		name = ancient_magic_spellbook_events_back
		remove_character_flag = casting_good_blood_spell
		remove_character_flag = casting_bad_blood_spell
		trigger_event = ancient_magic_spellbook_events.601
	}
}

ancient_magic_spellbook_events.603 = {
	title = ancient_magic_spellbook_events.603.t
	desc = {
		desc = ancient_magic_spellbook_events.603.desc
		# Good or Bad?
		triggered_desc = {
			trigger = {
				has_character_flag = casting_good_blood_spell
				NOR = {
					has_character_flag = casting_low_mana_spell
					has_character_flag = casting_low_skill_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.a.x.y
		}
		triggered_desc = {
			trigger = {
				has_character_flag = casting_bad_blood_spell
				NOR = {
					has_character_flag = casting_low_mana_spell
					has_character_flag = casting_low_skill_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.b.x.y
		}
		# Beauty, Physique, or Intellect?
		triggered_desc = {
			trigger = {
				has_character_flag = casting_beauty_blood_spell
				NOR = {
					has_character_flag = casting_low_mana_spell
					has_character_flag = casting_low_skill_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.x.a.y
		}
		triggered_desc = {
			trigger = {
				has_character_flag = casting_physique_blood_spell
				NOR = {
					has_character_flag = casting_low_mana_spell
					has_character_flag = casting_low_skill_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.x.b.y
		}
		triggered_desc = {
			trigger = {
				has_character_flag = casting_intellect_blood_spell
				NOR = {
					has_character_flag = casting_low_mana_spell
					has_character_flag = casting_low_skill_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.x.c.y
		}
		# Do You Meet The Requirements?
		triggered_desc = {
			trigger = {
				has_character_flag = casting_low_mana_spell
				NOT = { has_character_flag = casting_low_skill_spell }
			}
			desc = ancient_magic_spellbook_events_casting_low_mana_spell
		}
		triggered_desc = {
			trigger = {
				has_character_flag = casting_low_skill_spell
				NOT = { has_character_flag = casting_low_mana_spell }
			}
			desc = ancient_magic_spellbook_events_casting_low_skill_spell
		}
		triggered_desc = {
			trigger = {
				has_character_flag = casting_low_mana_spell
				has_character_flag = casting_low_skill_spell
			}
			desc = ancient_magic_spellbook_events_casting_low_mana_and_skill_spell
		}
		# How Powerful?
		triggered_desc = {
			trigger = {
				OR = {
					has_character_flag = casting_lesser_blood_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.x.y.a
		}
		triggered_desc = {
			trigger = {
				OR = {
					has_character_flag = casting_moderate_blood_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.x.y.b
		}
		triggered_desc = {
			trigger = {
				OR = {
					has_character_flag = casting_greater_blood_spell
				}
			}
			desc = ancient_magic_spellbook_events.603.desc.x.y.c
		}
		triggered_desc = {
			trigger = {
				has_character_flag = casting_null_blood_spell
			}
			desc = ancient_magic_spellbook_events.603.desc.x.y.d
		}
	}
	theme = biomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}

	immediate = {
		# Put it all together for localization, trigger, and option:
		switch = {
			trigger = has_character_flag
			
			# For Beauty:
			casting_beauty_blood_spell = {
				switch = {
					trigger = has_character_flag
					
					# For Positive Spell:
					casting_good_blood_spell = {
						scope:am_spell_target = {
							
							# Targets with no trait:
							if = {
								limit = {
									NOR = {
										has_trait = beauty_good
										has_trait = beauty_bad
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = architect_of_bloodlines_perk
											var:mana >= 400
										}
										add_character_flag = casting_greater_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = architect_of_bloodlines_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 400
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with advanced trait:
							else_if = {
								limit = {
									has_trait = beauty_good_2
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = perfect_trait_perk
											var:mana >= 200
										}
										add_character_flag = casting_moderate_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = perfect_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 200
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							# Targets with either bad or lowest good traits:
							else_if = {
								limit = {
									OR = {
										has_trait = beauty_bad
										has_trait = beauty_good_1
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = improve_trait_perk
											var:mana >= 100
										}
										add_character_flag = casting_lesser_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = improve_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 100
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							# Targets with perfect beauty:
							else_if = {
								limit = {
									has_trait = beauty_good_3
								}
								scope:am_spell_caster = {
									add_character_flag = casting_null_blood_spell
								}
							}
						}
					}
					casting_bad_blood_spell = {
						scope:am_spell_target = {
							
							# Targets with no trait:
							if = {
								limit = {
									NOR = {
										has_trait = beauty_good
										has_trait = beauty_bad
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = architect_of_bloodlines_perk
											var:mana >= 400
										}
										add_character_flag = casting_greater_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = architect_of_bloodlines_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 400
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with advanced trait:
							else_if = {
								limit = {
									has_trait = beauty_bad_2
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = criple_trait_perk
											var:mana >= 200
										}
										add_character_flag = casting_moderate_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = criple_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 200
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with either good or lowest bad trait:
							else_if = {
								limit = {
									OR = {
										has_trait = beauty_good
										has_trait = beauty_bad_1
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = weaken_trait_perk
											var:mana >= 100
										}
										add_character_flag = casting_lesser_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = weaken_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 100
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with perfect ugliness:
							else_if = {
								limit = {
									has_trait = beauty_bad_3
								}
								scope:am_spell_caster = {
									add_character_flag = casting_null_blood_spell
								}
							}
						}
					}
				}
			}
			casting_physique_blood_spell = {
				switch = {
					trigger = has_character_flag
					
					casting_good_blood_spell = {
						scope:am_spell_target = {
							
							# Targets with no trait:
							if = {
								limit = {
									NOR = {
										has_trait = physique_good
										has_trait = physique_bad
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = architect_of_bloodlines_perk
											var:mana >= 400
										}
										add_character_flag = casting_greater_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = architect_of_bloodlines_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 400
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with advanced trait:
							else_if = {
								limit = {
									has_trait = physique_good_2
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = perfect_trait_perk
											var:mana >= 200
										}
										add_character_flag = casting_moderate_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = perfect_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 200
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with either bad or lowest good trait:
							else_if = {
								limit = {
									OR = {
										has_trait = physique_bad
										has_trait = physique_good_1
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = improve_trait_perk
											var:mana >= 100
										}
										add_character_flag = casting_lesser_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = improve_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 100
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with perfect physique:
							else_if = {
								limit = {
									has_trait = physique_good_3
								}
								scope:am_spell_caster = {
									add_character_flag = casting_null_blood_spell
								}
							}
						}
					}
					casting_bad_blood_spell = {
						scope:am_spell_target = {
							
							# Targets with no trait:
							if = {
								limit = {
									NOR = {
										has_trait = physique_good
										has_trait = physique_bad
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = architect_of_bloodlines_perk
											var:mana >= 400
										}
										add_character_flag = casting_greater_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = architect_of_bloodlines_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									else_if = {
										limit = {
											var:mana < 400
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with advanced trait:
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = criple_trait_perk
											var:mana >= 200
										}
										add_character_flag = casting_moderate_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = criple_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 200
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with either good or lowest bad trait:
							else_if = {
								limit = {
									OR = {
										has_trait = physique_good
										has_trait = physique_bad_1
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = weaken_trait_perk
											var:mana >= 100
										}
										add_character_flag = casting_lesser_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = weaken_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 100
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with perfect weakness:
							else_if = {
								limit = {
									has_trait = physique_bad_3
								}
								scope:am_spell_caster = {
									add_character_flag = casting_null_blood_spell
								}
							}
						}
					}
				}
			}
			casting_intellect_blood_spell = {
				switch = {
					trigger = has_character_flag
					
					casting_good_blood_spell = {
						scope:am_spell_target = {
							
							# Targets with no trait:
							if = {
								limit = {
									NOR = {
										has_trait = intellect_good
										has_trait = intellect_bad
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = architect_of_bloodlines_perk
											var:mana >= 400
										}
										add_character_flag = casting_greater_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = architect_of_bloodlines_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 400
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with advanced trait:
							else_if = {
								limit = {
									has_trait = intellect_good_2
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = perfect_trait_perk
											var:mana >= 200
										}
										add_character_flag = casting_moderate_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = perfect_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 200
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with either bad or lowest good trait:
							else_if = {
								limit = {
									OR = {
										has_trait = intellect_bad
										has_trait = intellect_good_1
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = improve_trait_perk
											var:mana >= 100
										}
										add_character_flag = casting_lesser_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = improve_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 100
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with perfect intellect:
							else_if = {
								limit = {
									has_trait = intellect_good_3
								}
								scope:am_spell_caster = {
									add_character_flag = casting_null_blood_spell
								}
							}
						}
					}
					casting_bad_blood_spell = {
						scope:am_spell_target = {
							
							# Targets with no trait:
							if = {
								limit = {
									NOR = {
										has_trait = intellect_good
										has_trait = intellect_bad
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = architect_of_bloodlines_perk
											var:mana >= 400
										}
										add_character_flag = casting_greater_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = architect_of_bloodlines_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 400
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with advanced trait:
							else_if = {
								limit = {
									has_trait = intellect_bad_2
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = criple_trait_perk
											var:mana >= 200
										}
										add_character_flag = casting_moderate_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = criple_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 200
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with either good or lowest bad trait:
							else_if = {
								limit = {
									OR = {
										has_trait = intellect_good
										has_trait = intellect_bad_1
									}
								}
								scope:am_spell_caster = {
									if = {
										limit = {
											has_perk = weaken_trait_perk
											var:mana >= 100
										}
										add_character_flag = casting_lesser_blood_spell
									}

									else_if = {
										limit = {
											NOT = { has_perk = weaken_trait_perk }
										}
										add_character_flag = casting_low_skill_spell
									}
									
									else_if = {
										limit = {
											var:mana < 100
										}
										add_character_flag = casting_low_mana_spell
									}
								}
							}
							
							# Targets with perfect "stoopid":
							else_if = {
								limit = {
									has_trait = intellect_bad_3
								}
								scope:am_spell_caster = {
									add_character_flag = casting_null_blood_spell
								}
							}
						}
					}
				}
			}
		}
	}
	# Let God Sort Em' Out
	option = {
		name = ancient_magic_spellbook_events_cast
		trigger = {
			custom_description = {
				text = casting_null_blood_spell
				NOT = { has_character_flag = casting_null_blood_spell }
			}
			custom_description = {	
				text = casting_low_mana_spell
				NOT = { has_character_flag = casting_low_mana_spell }
			}
			custom_description = {
				text = casting_low_skill_spell
				NOT = { has_character_flag = casting_low_skill_spell }
			}
		}
		show_as_unavailable = {
			OR = {
				has_character_flag = casting_null_blood_spell
				has_character_flag = casting_low_mana_spell
				has_character_flag = casting_low_skill_spell
				has_character_flag = casting_null_blood_spell
			}
		}
		scope:am_spell_caster = {
			if = {
				limit = {
					has_character_flag = casting_good_blood_spell
				}
				switch = {
					trigger = has_character_flag
					casting_beauty_blood_spell = { scope:am_spell_target = {increase_vanilla_trait_rank = { TRAIT_PREFIX = beauty }}}
					casting_physique_blood_spell = { scope:am_spell_target = {increase_vanilla_trait_rank = { TRAIT_PREFIX = physique }}}
					casting_intellect_blood_spell = { scope:am_spell_target = {increase_vanilla_trait_rank = { TRAIT_PREFIX = intellect }}}
				}
			}
			else_if = {
				limit = {
					has_character_flag = casting_bad_blood_spell
				}
				switch = {
					trigger = has_character_flag
					casting_beauty_blood_spell = { scope:am_spell_target = {decrease_vanilla_trait_rank = { TRAIT_PREFIX = beauty }}}
					casting_physique_blood_spell = { scope:am_spell_target = {decrease_vanilla_trait_rank = { TRAIT_PREFIX = physique }}}
					casting_intellect_blood_spell = { scope:am_spell_target = {decrease_vanilla_trait_rank = { TRAIT_PREFIX = intellect }}}
				}
			}
			switch = {
				trigger = has_character_flag
				casting_lesser_blood_spell = { change_mana = { VALUE = -100 }}
				casting_moderate_blood_spell = { change_mana = { VALUE = -200 }}
				casting_greater_blood_spell = { change_mana = { VALUE = -400 }}
			}
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
		}
	}

	option = {
		name = ancient_magic_spellbook_events_back
		remove_character_flag = casting_lesser_blood_spell
		remove_character_flag = casting_moderate_blood_spell
		remove_character_flag = casting_greater_blood_spell
		remove_character_flag = casting_null_blood_spell
		remove_character_flag = casting_beauty_blood_spell
		remove_character_flag = casting_physique_blood_spell
		remove_character_flag = casting_intellect_blood_spell
		remove_character_flag = casting_low_mana_spell
		remove_character_flag = casting_low_skill_spell
		trigger_event = ancient_magic_spellbook_events.602
	}
}

# Sculpt Flesh
ancient_magic_spellbook_events.604 = {
	title = ancient_magic_spellbook_events.604.t
	desc = ancient_magic_spellbook_events.604.desc
	theme = biomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}

	immediate = {
		if = {
			limit = {
				NOT = { exists = var:sculpt_page }
			}
			set_variable = {
				name = sculpt_page
				value = 0
			}
		}
	}
	
	# Albino - Page 0
	option = {
		name = ancient_magic_spellbook_events.604.a.a
		trigger = {
			var:sculpt_page = 0
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = albino }
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 0
			NOT = { has_trait = albino }
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = albino
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.a.b
		trigger = {
			var:sculpt_page = 0
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = albino
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 0
			has_trait = albino
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = albino
		}
	}
	
	# Stuttering - Page 0
	option = {
		name = ancient_magic_spellbook_events.604.b.a
		trigger = {
			var:sculpt_page = 0
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = stuttering }
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 0
			NOT = { has_trait = stuttering }
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = stuttering
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.b.b
		trigger = {
			var:sculpt_page = 0
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = stuttering
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 0
			has_trait = stuttering
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = stuttering
		}
	}
	# Giant - Page 1
	option = {
		name = ancient_magic_spellbook_events.604.c.a
		trigger = {
			var:sculpt_page = 1
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = giant }
				NOT = { has_trait = dwarf }
			}
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				var:sculpt_page = 1
				NOT = { has_trait = giant }
				OR = {
					var:mana < 300
					has_trait = dwarf
				}
			}
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = giant
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.c.b
		trigger = {
			var:sculpt_page = 1
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = giant
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 1
			has_trait = giant
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = giant
		}
	}
	# Lisping - Page 1
	option = {
		name = ancient_magic_spellbook_events.604.d.a
		trigger = {
			var:sculpt_page = 1
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = lisping }
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 1
			NOT = { has_trait = lisping }
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = lisping
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.d.b
		trigger = {
			var:sculpt_page = 1
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = lisping
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 1
			has_trait = lisping
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = lisping
		}
	}
	# Scales - Page 2
	option = {
		name = ancient_magic_spellbook_events.604.e.a
		trigger = {
			var:sculpt_page = 2
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = scaly }
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 2
			NOT = { has_trait = scaly }
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = scaly
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.e.b
		trigger = {
			var:sculpt_page = 2
			scope:am_spell_target = {
				has_trait = scaly
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 2
			has_trait = scaly
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = scaly
		}
	}
	# Clubfooted - Page 2
	option = {
		name = ancient_magic_spellbook_events.604.f.a
		trigger = {
			var:sculpt_page = 2
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = clubfooted }
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 2
			NOT = { has_trait = clubfooted }
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = clubfooted
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.f.b
		trigger = {
			var:sculpt_page = 2
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = clubfooted
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 2
			has_trait = clubfooted
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = clubfooted
		}
	}
	# Hunchback - Page 3
	option = {
		name = ancient_magic_spellbook_events.604.g.a
		trigger = {
			var:sculpt_page = 3
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = hunchbacked }
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 3
			NOT = { has_trait = hunchbacked }
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = hunchbacked
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.g.b
		trigger = {
			var:sculpt_page = 3
			scope:am_spell_target = {
				has_trait = hunchbacked
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 3
			has_trait = hunchbacked
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = hunchbacked
		}
	}
	# Dwarf - Page 3
	option = {
		name = ancient_magic_spellbook_events.604.h.a
		trigger = {
			var:sculpt_page = 3
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = dwarf }
				NOT = { has_trait = giant }
			}
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				var:sculpt_page = 3
				NOT = { has_trait = dwarf }
				OR = {
					var:mana < 300
					has_trait = giant
				}
			}
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = dwarf
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.h.b
		trigger = {
			var:sculpt_page = 3
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = dwarf
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 3
			has_trait = dwarf
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = dwarf
		}
	}
	# Strong - Page 4
	option = {
		name = ancient_magic_spellbook_events.604.i.a
		trigger = {
			var:sculpt_page = 4
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = strong }
				NOT = { has_trait = weak }
				NOT = { has_trait = physique_bad }
			}
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				var:sculpt_page = 4
				NOT = { has_trait = strong }
				OR = {
					var:mana < 300
					has_trait = weak
					has_trait = physique_bad
				}
			}
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = strong
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.i.b
		trigger = {
			var:sculpt_page = 4
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = strong
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 4
			has_trait = strong
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = strong
		}
	}
	# Weak - Page 4
	option = {
		name = ancient_magic_spellbook_events.604.j.a
		trigger = {
			var:sculpt_page = 4
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = weak }
				NOT = { has_trait = strong }
				NOT = { has_trait = physique_good }
			}
		}
		show_as_unavailable = {
			scope:am_spell_target = {
				var:sculpt_page = 4
				NOT = { has_trait = weak }
				OR = {
					var:mana < 300
					has_trait = strong
					has_trait = physique_good
				}
			}
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = weak
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.j.b
		trigger = {
			var:sculpt_page = 4
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = weak
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 4
			has_trait = weak
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = weak
		}
	}
	# Blind - Page 4
	option = {
		name = ancient_magic_spellbook_events.604.k.a
		trigger = {
			var:sculpt_page = 4
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				NOT = { has_trait = blind }
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 4
			NOT = { has_trait = blind }
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			add_trait = blind
		}
	}
	option = {
		name = ancient_magic_spellbook_events.604.k.b
		trigger = {
			var:sculpt_page = 4
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			scope:am_spell_target = {
				has_trait = blind
			}
		}
		show_as_unavailable = {
			var:sculpt_page = 4
			has_trait = blind
			var:mana < 300
		}
		scope:am_spell_caster = {
			remove_character_flag = casting_lesser_blood_spell
			remove_character_flag = casting_moderate_blood_spell
			remove_character_flag = casting_greater_blood_spell
			remove_character_flag = casting_null_blood_spell
			remove_character_flag = casting_low_mana_spell
			remove_character_flag = casting_low_skill_spell
			remove_character_flag = casting_good_blood_spell
			remove_character_flag = casting_bad_blood_spell
			remove_character_flag = casting_beauty_blood_spell
			remove_character_flag = casting_physique_blood_spell
			remove_character_flag = casting_intellect_blood_spell
			remove_character_flag = am_spell_resolution
			set_variable = { name = sculpt_page value = 0 }
			change_mana = { VALUE = -300 }
		}
		scope:am_spell_target = {
			remove_trait = blind
		}
	}

	# Next Page - Display Other Event Options
	option = {
		name = ancient_magic_spellbook_events_next_page
		trigger = {
			var:sculpt_page < 4
		}
		change_variable = {
			name = sculpt_page
			add = 1
		}
		trigger_event = ancient_magic_spellbook_events.604
	}

	# Previous Page - Display Previous Event Options
	option = {
		name = ancient_magic_spellbook_events_previous_page
		trigger = {
			var:sculpt_page > 0
		}
		change_variable = {
			name = sculpt_page
			subtract = 1
		}
		trigger_event = ancient_magic_spellbook_events.604
	}

	# Go Back
	option = {
		name = ancient_magic_spellbook_events_back
		trigger = {
			var:sculpt_page < 1
		}
		trigger_event = ancient_magic_spellbook_events.602
	}
}

# Conception
ancient_magic_spellbook_events.605 = {
	title = ancient_magic_spellbook_events.605.t
	desc = {
		# Casting on yourself?
		first_valid = {
			# Yes - We'll assume you want to change fertility
			triggered_desc = {
				trigger = {
					scope:am_spell_target = scope:am_spell_caster
				}
				desc = ancient_magic_spellbook_events.605.desc.a
			}
			# No -- We'll assume you want to impregnate
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
				}
				desc = ancient_magic_spellbook_events.605.desc.b
			}
		}
		# Fertility - Enough Mana and skill?
		first_valid = {
			# Neither
			triggered_desc = {
				trigger = {
					NOT = { has_perk = fertility_control_perk }
					scope:am_spell_target = scope:am_spell_caster
					var:mana < 100
				}
				desc = ancient_magic_spellbook_events.605.desc.a.a
			}
			# Mana
			triggered_desc = {
				trigger = {
					has_perk = fertility_control_perk
					scope:am_spell_target = scope:am_spell_caster
					var:mana < 100
				}
				desc = ancient_magic_spellbook_events.605.desc.a.b
			}
			# Skill
			triggered_desc = {
				trigger = {
					NOT = { has_perk = fertility_control_perk }
					scope:am_spell_target = scope:am_spell_caster
					var:mana >= 100
				}
				desc = ancient_magic_spellbook_events.605.desc.a.c
			}
			# Both
			triggered_desc = {
				trigger = {
					has_perk = fertility_control_perk
					scope:am_spell_target = scope:am_spell_caster
					var:mana >= 100
				}
				desc = ancient_magic_spellbook_events.605.desc.a.d
			}
		}
		# Impregnate - Enough Mana and skill?
		first_valid = {
			# Neither
			triggered_desc = {
				trigger = {
					NOT = { has_perk = impregnate_perk }
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana < 300
				}
				desc = ancient_magic_spellbook_events.605.desc.b.a
			}
			# Mana
			triggered_desc = {
				trigger = {
					has_perk = impregnate_perk
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana < 300
				}
				desc = ancient_magic_spellbook_events.605.desc.b.b
			}
			# Skill
			triggered_desc = {
				trigger = {
					NOT = { has_perk = impregnate_perk }
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana >= 300
				}
				desc = ancient_magic_spellbook_events.605.desc.b.c
			}
			# Both
			triggered_desc = {
				trigger = {
					has_perk = impregnate_perk
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana >= 300
				}
				desc = ancient_magic_spellbook_events.605.desc.b.d
			}
		}
		# Impregnate - Is the victim of the opposite sex?
		first_valid = {
			# Yes - Good to go
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana >= 300
					has_perk = impregnate_perk
					OR = {
						AND = {
							scope:am_spell_target = {
								is_female = yes
							}
							scope:am_spell_caster = {
								is_female = no
							}
						}
						AND = {
							scope:am_spell_target = {
								is_female = no
							}
							scope:am_spell_caster = {
								is_female = yes
							}
						}
					}
				}
				desc = ancient_magic_spellbook_events.605.desc.b.x.a
			}
			# Nope
			triggered_desc = {
				trigger = {
					NOT = { scope:am_spell_target = scope:am_spell_caster }
					var:mana >= 300
					has_perk = impregnate_perk
					OR = {
						AND = {
							scope:am_spell_target = {
								is_female = yes
							}
							scope:am_spell_caster = {
								is_female = yes
							}
						}
						AND = {
							scope:am_spell_target = {
								is_female = no
							}
							scope:am_spell_caster = {
								is_female = no
							}
						}
					}
				}
				desc = ancient_magic_spellbook_events.605.desc.b.x.b
			}
		}
	}
	theme = biomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = worry
	}
	
	option = {
		name = ancient_magic_spellbook_events.605.a
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			has_perk = fertility_control_perk
		}
		show_as_unavailable = {
			scope:am_spell_caster = scope:am_spell_target
			OR = {
				var:mana < 100
				NOT = { has_perk = fertility_control_perk }
			}
		}
		change_mana = { VALUE = -100 }
		if = {
			limit = {
				has_character_modifier = biomantic_infertility_modifier
			}
			remove_character_modifier = biomantic_infertility_modifier
			change_mana_gen = { VALUE = 10 }
		}
		add_character_modifier = biomantic_fertility_modifier
		change_mana_gen = { VALUE = -10 }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events.605.b
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			has_perk = fertility_control_perk
			OR = {
				has_character_modifier = biomantic_infertility_modifier
				has_character_modifier = biomantic_fertility_modifier 
			}
		}
		show_as_unavailable = {
			scope:am_spell_caster = scope:am_spell_target
			OR = {
				var:mana < 100
				NOT = { has_perk = fertility_control_perk }
				NOR = {
					has_character_modifier = biomantic_infertility_modifier
					has_character_modifier = biomantic_fertility_modifier
				}
			}
		}
		change_mana = { VALUE = -100 }
		if = {
			limit = {
				has_character_modifier = biomantic_infertility_modifier
			}
			remove_character_modifier = biomantic_infertility_modifier
			change_mana_gen = { VALUE = 10 }
		}
		if = {
			limit = {
				has_character_modifier = biomantic_fertility_modifier
			}
			remove_character_modifier = biomantic_fertility_modifier
			change_mana_gen = { VALUE = 10 }
		}

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events.605.c
		trigger = {
			scope:am_spell_caster = scope:am_spell_target
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			has_perk = fertility_control_perk
		}
		show_as_unavailable = {
			scope:am_spell_caster = scope:am_spell_target
			OR = {
				var:mana < 100
				NOT = {
					has_perk = fertility_control_perk
				}
			}
		}
		change_mana = { VALUE = -100 }
		if = {
			limit = {
				has_character_modifier = biomantic_fertility_modifier
			}
			remove_character_modifier = biomantic_fertility_modifier
			change_mana_gen = { VALUE = 10 }
		}
		add_character_modifier = biomantic_infertility_modifier
		change_mana_gen = { VALUE = -10 }
		
		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events.605.d
		trigger = {
			NOT = { scope:am_spell_caster = scope:am_spell_target }
			scope:am_spell_caster = {
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 300
				}
				has_perk = impregnate_perk
				#NOT = { has_trait = undead } - Design choice
			}
			scope:am_spell_target = {
				#NOT = { has_trait = undead } - Design choice liche can use magic to have children.
				OR = {
					AND = {
						scope:am_spell_caster = {
							is_female = no
						}
						scope:am_spell_target = {
							is_female = yes
						}
					}
					AND = {
						scope:am_spell_caster = {
							is_female = yes
						}
						scope:am_spell_target = {
							is_female = no
						}
					}
				}
			}
		}
		show_as_unavailable = {
			NOT = { scope:am_spell_caster = scope:am_spell_target }
			OR = {
				scope:am_spell_caster = {
					OR = {
						var:mana < 300
						NOT = { has_perk = impregnate_perk }
						#has_trait = undead
					}
				}
				scope:am_spell_target = {
					OR = {
						#has_trait = undead
						AND = {
							scope:am_spell_caster = {
								is_female = no
							}
							scope:am_spell_target = {
								is_female = no
							}
						}
						AND = {
							scope:am_spell_caster = {
								is_female = yes
							}
							scope:am_spell_target = {
								is_female = yes
							}
						}
					}
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -300 }
			remove_character_flag = am_spell_resolution
		}
		scope:am_spell_target = {
			if = {
				limit = {
					scope:am_spell_caster = {
						is_female = no
					}
				}
				scope:am_spell_target = {
					make_pregnant = { father = scope:am_spell_caster }
				}
			}
			else = {
				scope:am_spell_caster = {
					make_pregnant = { father = scope:am_spell_target }
				}
			}
		}
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.006
	}
}

# Mensomancy Spells - Sorry. I thought it was appropriate to break the next person's brain.
# Do yourself a favor. start this one over unless you want a puzzle. It's intentionally confusing. ;)

# Manipulate Mind - Combines: 
#'Incite Lust/Obedience', 'Form Friendship/Rivalry', 'Dominate', and 'Mind Control'
ancient_magic_spellbook_events.701 = {
	title = ancient_magic_spellbook_events.701.t
	desc = {
		first_valid = {
			# High brain or low brain?
			triggered_desc = {
				trigger = {
					NOR = {
						has_character_flag = target_limbic_system
						has_character_flag = target_cerebral_cortex
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x
			}
		}
		# What are you targeting in the limbic system?
		triggered_desc = {
			trigger = {
				has_character_flag = target_limbic_system
				NOR = {
					has_character_flag = target_companionship
					has_character_flag = target_aggression
				}
			}
			desc = ancient_magic_spellbook_events.701.desc.x.a
		}
		# Are you able to manipulate the target's feelings of companionship?
		first_valid = {
			# All Three
			triggered_desc = {
				trigger = {
					has_character_flag = target_companionship
					has_perk = friendship_perk
					has_perk = entrance_perk
					AND = {
						has_perk = incite_lust_perk
						scope:am_spell_target = {
							age >= 16
						}
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.a.a
			}
			triggered_desc = {
				trigger = {
					has_character_flag = target_companionship
					calc_true_if = {
						amount >= 2
						has_perk = friendship_perk
						has_perk = entrance_perk
						AND = {
							has_perk = incite_lust_perk
							scope:am_spell_target = {
								age >= 16
							}
						}
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.a.b
			}
			# Only feelings of lust
			triggered_desc = {
				trigger = {
					has_character_flag = target_companionship
					has_perk = incite_lust_perk
					NOT = { has_perk = friendship_perk }
					scope:am_spell_target = {
						age >= 16
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.a.c
			}
			# Only feelings of friendship
			triggered_desc = {
				trigger = {
					has_character_flag = target_companionship
					has_perk = friendship_perk
					OR = {
						NOT = { has_perk = incite_lust_perk }
						AND = {
							has_perk = incite_lust_perk
							scope:am_spell_target = {
								age < 16
							}
						}
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.a.d
			}
			# Only feeling of adoration
			triggered_desc = {
				trigger = {
					has_character_flag = target_companionship
					has_perk = entrance_perk
					NOT = { has_perk = friendship_perk }
					OR = {
						NOT = { has_perk = incite_lust_perk }
						AND = {
							has_perk = incite_lust_perk
							scope:am_spell_target = {
								age < 16
							}
						}
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.a.e
			}
			# None
			triggered_desc = {
				trigger = {
					has_character_flag = target_companionship
					NOR = {
						has_perk = friendship_perk
						has_perk = incite_lust_perk
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.a.f
			}
		}
		# Are you able to manipulate the target's feelings of aggression?
		first_valid = {
			# Both
			triggered_desc = {
				trigger = {
					has_character_flag = target_aggression
					has_perk = friendship_perk
					has_perk = incite_obedience_perk
				}
				desc = ancient_magic_spellbook_events.701.desc.x.b.a
			}
			# Only feelings of submission
			triggered_desc = {
				trigger = {
					has_character_flag = target_aggression
					has_perk = incite_obedience_perk
					NOT = { has_perk = friendship_perk }
				}
				desc = ancient_magic_spellbook_events.701.desc.x.b.b
			}
			# Only feelings of rivalry
			triggered_desc = {
				trigger = {
					has_character_flag = target_aggression
					has_perk = friendship_perk
					NOT = { has_perk = incite_obedience_perk }
				}
				desc = ancient_magic_spellbook_events.701.desc.x.b.c
			}
			# None
			triggered_desc = {
				trigger = {
					has_character_flag = target_aggression
					NOR = {
						has_perk = friendship_perk
						has_perk = incite_obedience_perk
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.b.d
			}
		}
		# Domination or Direct Control?
		triggered_desc = {
			trigger = {
				has_character_flag = target_cerebral_cortex
			}
			desc = ancient_magic_spellbook_events.701.desc.x.c
		}
		
		# Are you able to manipulate the target's higher brain functions?
		first_valid = {
			# Both
			triggered_desc = {
				trigger = {
					has_character_flag = target_cerebral_cortex
					has_perk = master_of_puppets_perk
				}
				desc = ancient_magic_spellbook_events.701.desc.x.c.a
			}
			# Only Domination
			triggered_desc = {
				trigger = {
					has_character_flag = target_cerebral_cortex
					NOT = { has_perk = master_of_puppets_perk }
					has_perk = dominate_perk
				}
				desc = ancient_magic_spellbook_events.701.desc.x.c.b
			}
			# None
			triggered_desc = {
				trigger = {
					has_character_flag = target_cerebral_cortex
					NOR = {
						has_perk = master_of_puppets_perk
						has_perk = dominate_perk
					}
				}
				desc = ancient_magic_spellbook_events.701.desc.x.c.c
			}
		}
	}
	theme = mensomancy
	left_portrait = scope:am_spell_caster
	right_portrait = {
		trigger = {
			NOT = { scope:am_spell_target = scope:am_spell_caster }
		}
		character = scope:am_spell_target
		animation = paranoia
	}

#The Limbic System ('a' branch):
	# Target the Limbic System
	option = {
		name = ancient_magic_spellbook_events.701.a
		trigger = {
			NOR = {
				has_character_flag = target_limbic_system
				has_character_flag = target_cerebral_cortex
			}
		}
		add_character_flag = target_limbic_system
		trigger_event = ancient_magic_spellbook_events.701
	}

	# Limbic System > Companionship
	option = {
		name = ancient_magic_spellbook_events.701.a.a
		trigger = {
			has_character_flag = target_limbic_system
			NOR = {
				has_character_flag = target_companionship
				has_character_flag = target_aggression
			}
		}
		add_character_flag = target_companionship
		trigger_event = ancient_magic_spellbook_events.701
	}

	# Limbic System > Aggression
	option = {
		name = ancient_magic_spellbook_events.701.a.b
		trigger = {
			has_character_flag = target_limbic_system
			NOR = {
				has_character_flag = target_companionship
				has_character_flag = target_aggression
			}
		}
		add_character_flag = target_aggression
		trigger_event = ancient_magic_spellbook_events.701
	}

	# Limbic System  > Go Back
	option = {
		name = ancient_magic_spellbook_events_back
		trigger = {
			has_character_flag = target_limbic_system
			NOR = {
				has_character_flag = target_companionship
				has_character_flag = target_aggression
			}
		}
		remove_character_flag = target_limbic_system
		trigger_event = ancient_magic_spellbook_events.701
	}
	
	# Limbic System > Companionship > Lust
	option = {
		name = ancient_magic_spellbook_events.701.a.a.a
		trigger = { 
			has_character_flag = target_limbic_system
			has_character_flag = target_companionship
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 300
			}
			has_perk = incite_lust_perk
			scope:am_spell_target = {
				age >= 16
				NOT = { has_relation_lover = scope:am_spell_caster }
			}
		}
		show_as_unavailable = {
			has_character_flag = target_limbic_system
			has_character_flag = target_companionship
			OR = {
				var:mana < 300
				has_character_modifier = incite_lust_spell_modifier
				NOT = { has_perk = incite_lust_perk }
				age < 16
				has_relation_lover = scope:am_spell_caster
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -300 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = target_limbic_system
			remove_character_flag = target_companionship
			remove_character_flag = target_aggression
			remove_character_flag = target_cerebral_cortex
		}
		scope:am_spell_target = {
			set_relation_lover = scope:am_spell_caster
		}
	}

	# Limbic System > Companionship > Friendship
	option = {
		name = ancient_magic_spellbook_events.701.a.a.b
		trigger = {
			has_character_flag = target_limbic_system
			has_character_flag = target_companionship
			scope:am_spell_caster = {
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 400
				}
				has_perk = friendship_perk
			}
			scope:am_spell_target = {
				NOT = { has_relation_friend = scope:am_spell_caster }
			}
		}
		show_as_unavailable = {
			has_character_flag = target_limbic_system
			has_character_flag = target_companionship
			OR = {
				scope:am_spell_caster = {
					var:mana < 400
					NOT = { has_perk = friendship_perk }
				}
				scope:am_spell_target = {
					has_relation_friend = scope:am_spell_caster
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -400 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = target_limbic_system
			remove_character_flag = target_companionship
			remove_character_flag = target_aggression
			remove_character_flag = target_cerebral_cortex
		}
		scope:am_spell_target = {
			set_relation_friend = scope:am_spell_caster
		}
	}

	# Limbic System > Companionship > Opinion
	option = {
		name = ancient_magic_spellbook_events.701.a.a.c
		trigger = {
			has_character_flag = target_limbic_system
			has_character_flag = target_companionship
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			has_perk = entrance_perk
			scope:am_spell_target = {
				NOT = {
					has_opinion_modifier = {
						target = scope:am_spell_caster
						modifier = entrance_spell_opinion
					}
				}
			}
		}
		show_as_unavailable = {
			has_character_flag = target_limbic_system
			has_character_flag = target_companionship
			OR = {
				var:mana < 100
				NOT = { has_perk = entrance_perk }
				scope:am_spell_target = {
					has_opinion_modifier = {
						target = scope:am_spell_caster
						modifier = entrance_spell_opinion
					}
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -100 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = target_limbic_system
			remove_character_flag = target_companionship
			remove_character_flag = target_aggression
			remove_character_flag = target_cerebral_cortex
		}
		scope:am_spell_target = {
			add_opinion = {
				target = scope:am_spell_caster
				modifier = entrance_spell_opinion
			}
		}
	}

	# Limbic System > Aggression > Rivalry
	option = {
		name = ancient_magic_spellbook_events.701.a.b.a
		trigger = {
			has_character_flag = target_limbic_system
			has_character_flag = target_aggression
			scope:am_spell_caster = {
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 400
				}
				has_perk = friendship_perk
			}
			scope:am_spell_target = {
				NOT = { has_relation_rival = scope:am_spell_caster }
			}
		}
		show_as_unavailable = {
			has_character_flag = target_limbic_system
			has_character_flag = target_companionship
			OR = {
				scope:am_spell_caster = {
					var:mana < 400
					NOT = { has_perk = friendship_perk }
				}
				scope:am_spell_target = {
					has_relation_rival = scope:am_spell_caster
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -400 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = target_limbic_system
			remove_character_flag = target_companionship
			remove_character_flag = target_aggression
			remove_character_flag = target_cerebral_cortex
		}
		scope:am_spell_target = {
			set_relation_rival = scope:am_spell_caster
		}
	}

	# Limbic System > Aggression > Obedience
	option = {
		name = ancient_magic_spellbook_events.701.a.b.b
		trigger = {
			has_character_flag = target_limbic_system
			has_character_flag = target_aggression
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 200
			}
			has_perk = incite_obedience_perk
			NOR = {
				has_hook_of_type = {
					target = scope:am_spell_target
					type = ancient_magic_hook_obedient
				}
				has_hook_of_type = {
					target = scope:am_spell_target
					type = ancient_magic_hook_dominated
				}
				has_hook_of_type = {
					target = scope:am_spell_target
					type = ancient_magic_hook_puppet
				}
			}
		}
		show_as_unavailable = {
			has_character_flag = target_limbic_system
			has_character_flag = target_aggression
			OR = {
				var:mana < 200
				NOT = { has_perk = incite_obedience_perk }
				has_hook_of_type = {
					target = scope:am_spell_target
					type = ancient_magic_hook_obedient
				}
				has_hook_of_type = {
					target = scope:am_spell_target
					type = ancient_magic_hook_dominated
				}
				has_hook_of_type = {
					target = scope:am_spell_target
					type = ancient_magic_hook_puppet
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -200 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = target_limbic_system
			remove_character_flag = target_companionship
			remove_character_flag = target_aggression
			remove_character_flag = target_cerebral_cortex
			add_hook = {
				target = scope:am_spell_target
				type = ancient_magic_hook_obedient
			}
		}
	}

	# Limbic System > Aggression / Companionship > Go Back
	option = {
		name = ancient_magic_spellbook_events_back
		trigger = {
			OR = {
				has_character_flag = target_companionship
				has_character_flag = target_aggression
			}
		}
		remove_character_flag = target_companionship
		remove_character_flag = target_aggression
		trigger_event = ancient_magic_spellbook_events.701
	}

# The Cerebral Cortex ('b' branch):
	# Target the cerebral cortex
	option = {
		name = ancient_magic_spellbook_events.701.b
		trigger = {
			NOR = {
				has_character_flag = target_limbic_system
				has_character_flag = target_cerebral_cortex
			}
		}
		add_character_flag = target_cerebral_cortex
		trigger_event = ancient_magic_spellbook_events.701
	}

	# Cerebral Cortex > Dominate
	option = {
		name = ancient_magic_spellbook_events.701.b.a
		trigger = {
			scope:am_spell_caster = {
				has_character_flag = target_cerebral_cortex
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 400
				}
				has_perk = dominate_perk
				NOR = {
					has_hook_of_type = {
						target = scope:am_spell_target
						type = ancient_magic_hook_dominated
					}
					has_hook_of_type = {
						target = scope:am_spell_target
						type = ancient_magic_hook_puppet
					}
				}
			}
		}
		show_as_unavailable = {
			scope:am_spell_caster = {
				has_character_flag = target_cerebral_cortex
				OR = {
					var:mana < 400
					has_character_modifier = dominate_spell_modifier
					NOT = { has_perk = dominate_perk }
					has_hook_of_type = {
						target = scope:am_spell_target
						type = ancient_magic_hook_dominated
					}
					has_hook_of_type = {
						target = scope:am_spell_target
						type = ancient_magic_hook_puppet
					}
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -400 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = target_limbic_system
			remove_character_flag = target_companionship
			remove_character_flag = target_aggression
			remove_character_flag = target_cerebral_cortex
			add_hook = {
				target = scope:am_spell_target
				type = ancient_magic_hook_dominated
			}
		}
	}

	# Cerebral Cortex > Mind Control
	option = {
		name = ancient_magic_spellbook_events.701.b.b
		trigger = {
			scope:am_spell_caster = {
				has_character_flag = target_cerebral_cortex
				custom_description = {
					text = enough_mana_trigger_desc
					var:mana >= 6000
				}
				has_perk = master_of_puppets_perk
				NOT = {
					has_hook_of_type = {
						target = scope:am_spell_target
						type = ancient_magic_hook_puppet
					}
				}
			}
		}
		show_as_unavailable = {
			scope:am_spell_caster = {
				has_character_flag = target_cerebral_cortex
				OR = {
					var:mana < 600
					NOT = { has_perk = master_of_puppets_perk }
					has_hook_of_type = {
						target = scope:am_spell_target
						type = ancient_magic_hook_puppet
					}
				}
			}
		}
		scope:am_spell_caster = {
			change_mana = { VALUE = -600 }
			remove_character_flag = am_spell_resolution
			remove_character_flag = target_limbic_system
			remove_character_flag = target_companionship
			remove_character_flag = target_aggression
			remove_character_flag = target_cerebral_cortex
			add_hook = {
				target = scope:am_spell_target
				type = ancient_magic_hook_puppet
			}
		}
	}

	# Cerebral Cortex > Go Back
	option = {
		name = ancient_magic_spellbook_events_back
		trigger = {
			has_character_flag = target_cerebral_cortex
		}
		remove_character_flag = target_cerebral_cortex
		trigger_event = ancient_magic_spellbook_events.701
	}

	# Go Back - Main
	option = {
		trigger = {
			NOR = {
				has_character_flag = target_limbic_system
				has_character_flag = target_cerebral_cortex
			}
		}
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.007
	}
}

# Beguiling Aura
ancient_magic_spellbook_events.702 = {
	title = ancient_magic_spellbook_events.702.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = beguiling_aura_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = beguiling_aura_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = beguiling_aura } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = beguiling_aura } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = beguiling_aura }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.702.desc
		}
	}
	theme = mensomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = beguiling_aura } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 15
			}
			has_perk = beguiling_aura_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = beguiling_aura } }
			OR = {
				var:mana < 100
				var:mana_gen < 15
				NOT = { has_perk = beguiling_aura_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -15 }

		add_aura_modifier = { AURA = beguiling_aura }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = beguiling_aura }
			var:mana >= 100
			var:mana_gen >= 15
			has_perk = beguiling_aura_perk
		}

		change_mana_gen = { VALUE = 15 }

		remove_aura_modifier = { AURA = beguiling_aura }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.007
	}
}

# Enchanting Aura
ancient_magic_spellbook_events.703 = {
	title = ancient_magic_spellbook_events.703.t
	desc = {
		first_valid = {
			# Does the caster have enough mana and skill
			triggered_desc = {
				trigger = {
					OR = {
						var:mana < 100
						var:mana_gen < 15
					}
					NOT = { has_perk = enchanting_aura_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_and_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					NOT = { has_perk = enchanting_aura_perk }
				}
				desc = ancient_magic_spellbook_events_casting_low_skill_spell
			}
			triggered_desc = {
				trigger = {
					var:mana < 100
					NOT = { has_any_spell_aura_modifier = { AURA = enchanting_aura } }
				}
				desc = ancient_magic_spellbook_events_casting_low_mana_spell
			}
			# Can the caster sustain the drain?
			triggered_desc = {
				trigger = {
					var:mana_gen < 15
					NOT = { has_any_spell_aura_modifier = { AURA = enchanting_aura } }
				}
				desc = ancient_magic_spellbook_events_casting_low_drain_spell
			}
			# Is the caster the target of this aura?
			#triggered_desc = {
			#	trigger = {
			#		NOT = { scope:am_spell_target = scope:am_spell_caster }
			#	}
			#	desc = ancient_magic_spellbook_events_casting_aura_on_target
			#}
			# Does the caster already have the aura?
			triggered_desc = {
				trigger = {
					scope:am_spell_target = {
						has_any_spell_aura_modifier = { AURA = enchanting_aura }
					}
				}
				desc = ancient_magic_spellbook_events_casting_aura_on_character_with_aura
			}
			# The spell goes off as expected
			desc = ancient_magic_spellbook_events.703.desc
		}
	}
	theme = mensomancy
	left_portrait = scope:am_spell_caster
	#right_portrait = scope:am_spell_target
	
	option = {
		name = ancient_magic_spellbook_activate_aura
		trigger = {
			NOT = { has_any_spell_aura_modifier = { AURA = enchanting_aura } }
			custom_description = {
				text = enough_mana_trigger_desc
				var:mana >= 100
			}
			custom_description = {
				text = enough_mana_gen_trigger_desc
				var:mana_gen >= 30
			}
			has_perk = enchanting_aura_perk
		}
		show_as_unavailable = {
			NOT = { has_any_spell_aura_modifier = { AURA = enchanting_aura } }
			OR = {
				var:mana < 100
				var:mana_gen < 30
				NOT = { has_perk = enchanting_aura_perk }
			}
		}

		change_mana = { VALUE = -100 }

		change_mana_gen = { VALUE = -30 }

		add_aura_modifier = { AURA = enchanting_aura }

		remove_character_flag = am_spell_resolution
	}

	option = {
		name = ancient_magic_spellbook_deactivate_aura
		trigger = {
			has_any_spell_aura_modifier = { AURA = enchanting_aura }
		}

		change_mana_gen = { VALUE = 30 }

		remove_aura_modifier = { AURA = enchanting_aura }

		remove_character_flag = am_spell_resolution
	}
	
	option = {
		name = ancient_magic_spellbook_events_back
		trigger_event = ancient_magic_spellbook_events.007
	}
}