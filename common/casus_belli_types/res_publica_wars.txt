depose_dictator_war = {
	group = civil_war
	ai_only_against_liege = yes
	target_titles = none
	allowed_for_character = {
		exists = scope:attacker.house.var:titular_republic
		exists = scope:defemder.house.var:titular_republic

		scope:attacker.house.var:titular_republic = { has_variable = forced_dictatorship NOT = { has_variable = limited_dictatorship } }
	}

	allowed_against_character = {
		scope:attacker.liege = scope:defender
		scope:attacker.house.var:titular_republic = scope:defender.house.var:titular_republic
	}

	cost = {
		prestige = 500
	}

	target_de_jure_regions_above = yes

	valid_to_start = {
		always = yes
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = depose_dictator_war_victory_desc_defender
			}
			desc = depose_dictator_war_victory_desc
		}
		
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
			}
		}

		scope:defender = {
			# If we win the rebellion, our liege loses any legal right to imprison us/banish us/revoke our titles.
			consume_all_criminal_reasons_effect = {
				LIEGE = scope:defender
				CRIMINAL = scope:attacker
			}
			# Remove offending HumSac modifiers.
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
			# Then our liege is deposed (but the imprisonment loss remains true for their heir).
			if = {
				limit = { exists = house.var:titular_republic }
				house.var:titular_republic = {
					custom_description = {
						text = effect_trigger_election_cycle
						magocracy_succession = yes
					}
					custom_description = {
						text = effect_end_dictatorship
						remove_variable = current_dictatorship
						remove_variable = forced_dictatorship
					}
				}
			}
		}


	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = depose_dictator_war_white_peace_desc_defender
			}
			desc = depose_dictator_war_white_peace_desc
		}
		
	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
			if = {
				limit = { exists = house.var:titular_republic }
				house.var:titular_republic = {
					custom_description = {
						text = effect_limit_dictatorship
						set_variable = limited_dictatorship
					}
				}
			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = depose_dictator_war_defeat_desc_defender
			}
			desc = depose_dictator_war_defeat_desc
		}
		
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_dread = medium_dread_gain
		}
		scope:attacker = {
			if = {
				limit = {
					is_imprisoned = no
				}
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = scope:defender
				}
				scope:defender = {
					add_opinion = {
						target = prev
						modifier = vassal_lost_faction_revolt_war
					}
				}
			}
		}
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DEPOSE_DICTATOR_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 50
	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 100

	max_ai_diplo_distance_to_title = 500
}