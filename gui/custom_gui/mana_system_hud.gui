types mana_hud_guis {
	type mana_hud = hbox {
		name = "mana_hud"
		layoutpolicy_vertical = expanding
		minimumsize = { 90 0 }
		margin_left = 7
		margin_right = 5

		using = tooltip_ne

		tooltipwidget = {
			widget = {
				alwaystransparent = no
				size = { 50 50 }
				using = DefaultTooltipBackground

				vbox = {
					name = "mana_tooltip_container"
					restrictparent_min = yes
					filter_mouse = all
					margin = { 15 10 }
					minimumsize = { 280 0 }

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						alwaystransparent = no

						vbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = mana_hud_tooltip_generation
								default_format = "#T"

								background = {
									using = Background_Area
									margin = { 10 0 }
									margin_bottom = 5
								}
							}

							hbox = { #Perks
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_gen_perks' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "gained_value_perks1"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_gain_perks
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "gained_value_perks2"
									text = MONTHLY_MANA_GAIN_PERKS
								}
							}

							hbox = { #Potency
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_gen_potency' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "gained_value_potency1"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_gain_potency
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "gained_value_potency2"
									text = MONTHLY_MANA_GAIN_POTENCY
								}
							}

							hbox = { #Circles
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_gen_circles' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "gained_value_circles1"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_gain_circles
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "gained_value_circles2"
									text = MONTHLY_MANA_GAIN_CIRCLES
								}
							}

							hbox = { #Lifestyle
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_gen_lifestyle' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "gained_value_lifestyle1"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_gain_lifestyle
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "gained_value_lifestyle2"
									text = MONTHLY_MANA_GAIN_LIFESTYLE
								}
							}

							hbox = { #Legacy
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_gen_legacy' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "gained_value_legacy1"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_gain_legacy
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "gained_value_legacy2"
									text = MONTHLY_MANA_GAIN_LEGACY
								}
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								margin_top = 8

								divider_light = {
									layoutpolicy_horizontal = expanding
								}
							}

							hbox = { #Total Gen
								layoutpolicy_horizontal = expanding

								text_single = {
									name = "gained_value_total1"
									layoutpolicy_horizontal = expanding
									text = VALUE_BREAKDOWN_TOTAL
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "gained_value_total2"
									text = MANA_GENERATION_TOOLTIP
								}
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 15

							text_single = {
								layoutpolicy_horizontal = expanding
								text = mana_hud_tooltip_drain
								default_format = "#T"

								background = {
									using = Background_Area
									margin = { 10 0 }
									margin_bottom = 5
								}
							}

							hbox = { #Auras
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_drain_auras' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "drain_value_auras1"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_drain_auras
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "drain_value_auras2"
									text = MONTHLY_MANA_DRAIN_AURAS
								}
							}

							hbox = { #Lifestyle
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_drain_lifestyle' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "drain_value_lifestyle1"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_drain_lifestyle
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "drain_value_lifestyle2"
									text = MONTHLY_MANA_DRAIN_LIFESTYLE
								}
							}

							hbox = { #Disease1
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_drain_disease1' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "drain_value_disease1a"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_drain_disease1
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "drain_value_disease1b"
									text = MONTHLY_MANA_DRAIN_DISEASE
								}
							}

							hbox = { #Disease2
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui( 'hud_mana_drain_disease2' )]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

								text_single = {
									name = "drain_value_disease2a"
									layoutpolicy_horizontal = expanding
									text = mana_breakdown_drain_disease2
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "drain_value_disease2b"
									text = MONTHLY_MANA_DRAIN_DISEASE
								}
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								margin_top = 8

								divider_light = {
									layoutpolicy_horizontal = expanding
								}
							}

							hbox = { #Total Drain
								layoutpolicy_horizontal = expanding

								text_single = {
									name = "drain_value_total1"
									layoutpolicy_horizontal = expanding
									text = VALUE_BREAKDOWN_TOTAL
									min_width = 180
									max_width = 250
									fonttintcolor = "[TooltipInfo.GetTintColor]"
									margin_right = 10
								}

								text_single = {
									name = "drain_value_total2"
									text = MANA_DRAIN_TOOLTIP
								}
							}
						}
					}
				}
			}
		}
		hbox = {
			name = "mana"
			layoutpolicy_vertical = expanding
			datacontext = "[GetTrait('mage')]"

			hbox = {
				spacing = 0
				margin_top = -11
				visible = "[And( Not(IsObserver), GetPlayer.HasTrait(Trait.Self) )]"

				icon = {
					name = "mana_icon"
					size = { 30 30 }
					texture = "gfx/interface/icons/icon_active_aura.dds"
				}

				vbox = {
					margin_bottom = 1
					spacing = 1
					ignoreinvisible = yes

					text_single = {
						name = "mana_value"
						text = "[GetPlayer.MakeScope.Var('mana').GetValue|0]"
						max_width = 50
						default_format = "#high"
						using = Font_Size_Medium
					}

					progressbar_standard = {
						name = "mana_bar"
						size = { 40 8 }

						min = 0
						max = "[FixedPointToFloat(GetPlayer.MakeScope.ScriptValue('ancient_magic_max_mana'))]"
						value = "[FixedPointToFloat(GetPlayer.MakeScope.Var('mana').GetValue)]"
					}

					#text_single = {
					#	name = "mana_balance"
					#	visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('ancient_magic_mana_gen'), '(CFixedPoint)0')]"
					#	layoutpolicy_horizontal = expanding
					#	text = "MANA_GENERATION"
					#	max_width = 50
					#	default_format = "#low"
					#}

					#text_single = {
					#	name = "mana_balance_negative"
					#	visible = "[LessThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('ancient_magic_mana_gen'), '(CFixedPoint)0')]"
					#	layoutpolicy_horizontal = expanding
					#	text = "MANA_GENERATION"
					#	max_width = 50
					#	default_format = "#N"
					#}
				}
			}

			hbox = {
				spacing = 6
				margin_top = -11
				visible = "[Or( IsObserver, Not(GetPlayer.HasTrait(Trait.Self)) )]"

				icon = {
					name = "inactive_icon"
					size = { 30 30 }
					texture = "gfx/interface/icons/icon_inactive_aura.dds"
				}

				flowcontainer = {
					margin_bottom = 7
					spacing = -6
					direction = vertical
					ignoreinvisible = yes

					text_single = {
						name = "mana_value"
						layoutpolicy_horizontal = expanding
						text = "0"
						max_width = 50
						default_format = "#high"
						using = Font_Size_Medium
					}

					text_single = {
						name = "mana_balance"
						layoutpolicy_horizontal = expanding
						text = "0"
						max_width = 50
						default_format = "#low"
					}
				}
			}
		}
	}

	## Gold Breakdown Tooltip
	type widget_mana_gen_breakdown_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no

		block "background" { #### needed to solve the hack for tooltip in Realm View
			using = DefaultTooltipBackground
		}

		vbox = {
			layoutpolicy_horizontal = expanding

			set_parent_size_to_minimum = yes
			minimumsize = { 280 0 }

			margin = { 15 10 }
			spacing = 20

			hbox = {
				layoutpolicy_horizontal = expanding

				text_single = {
					layoutpolicy_horizontal = expanding
					text = MAXIMUM_MANA_NAME
					default_format = "#T"
				}

				text_single = {
					name = "maximum_mana"
					text = MAXIMUM_MANA_TOTAL
				}

				background = {
					using = Background_Area
					margin = { 10 0 }
					margin_bottom = 5
				}
			}

			vbox_gen_breakdown = {
				name = "mana_gen_income"
				layoutpolicy_horizontal = expanding
				block "income" {}
				blockoverride "breakdown_name"
				{
					text = "MANA_INCOME_NAME"
				}
				blockoverride "datamodel"
				{
					datamodel = "[GetGlobalList('mana_gen_income')]"
				}
				blockoverride "not_datamodel_has_items"
				{
					visible = "[Not(DataModelHasItems( GetGlobalList('mana_gen_income') ))]"
				}
				blockoverride "datamodel_has_items"
				{
					visible = "[DataModelHasItems( GetGlobalList('mana_gen_income') )]"
					datacontext = "[GetScriptedGui('mana_gen_income')]"
				}
				blockoverride "breakdown_total"
				{
					text = "MANA_INCOME_TOTAL"
				}
			}

			vbox_gen_breakdown = {
				name = "mana_gen_expenses"
				layoutpolicy_horizontal = expanding
				block "expenses" {}
				blockoverride "breakdown_name"
				{
					text = "MANA_EXPENSES_NAME"
				}
				blockoverride "datamodel"
				{
					datamodel = "[GetGlobalList('mana_gen_expenses')]"
				}
				blockoverride "not_datamodel_has_items"
				{
					visible = "[Not(DataModelHasItems(GetGlobalList('mana_gen_expenses')))]"
				}
				blockoverride "datamodel_has_items"
				{
					visible = "[DataModelHasItems(GetGlobalList('mana_gen_expenses'))]"
					datacontext = "[GetScriptedGui('mana_gen_expenses')]"
				}
				blockoverride "breakdown_total"
				{
					text = "MANA_EXPENSES_TOTAL"
				}
			}

			hbox = { #Net Gen
				layoutpolicy_horizontal = expanding
				margin_top = 10
				margin_bottom = 2

				text_single = {
					layoutpolicy_horizontal = expanding
					text = mana_hud_tooltip_change
					default_format = "#T"
				}

				text_single = {
					name = "monthly_gen1"
					text = MANA_GENERATION
				}

				background = {
					using = Background_Area
					margin = { 10 0 }
					margin_bottom = 5
				}
			}
		}
	}

	type vbox_gen_breakdown = vbox {
		spacing = 5
		alwaystransparent = no

		vbox = {
			layoutpolicy_horizontal = expanding

			text_single = {
				layoutpolicy_horizontal = expanding
				block "breakdown_name" {}
				default_format = "#T"

				background = {
					using = Background_Area
					margin = { 10 0 }
					margin_bottom = 5
				}
			}

			vbox = {
				name = "values_grid"
				block "datamodel" {}
				layoutpolicy_horizontal = expanding

				item = {
					hbox = {
						name = "value_breakdown"
						layoutpolicy_horizontal = expanding
						spacing = 10

						text_single = {
							name = "name"
							layoutpolicy_horizontal = expanding
							text = "[Localize(Concatenate(Concatenate('mana_breakdown_',Scope.GetFlagName),'_name'))]"
						}

						text_single = {
							name = "value_with_tooltip"
							visible = "[And(GetScriptedGui(Concatenate('hud_mana_',Scope.GetFlagName)).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptGui(Concatenate('hud_mana_',Scope.GetFlagName)).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
							text = "[Localize(Concatenate(Concatenate('mana_breakdown_',Scope.GetFlagName),'_amount'))|L]"
							align = right
							default_format = "#high"

							using = tooltip_se

							tooltipwidget = {
								widget_gen_breakdown_tooltip = {
									blockoverride "datamodel" {
										datamodel = "[GetGlobalList(Scope.GetFlagName)]"
									}
								}
							}
						}

						text_single = {
							name = "value_with_no_tooltip"
							visible = "[And( Not(GetScriptedGui(Concatenate('hud_mana_',Scope.GetFlagName)).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)), GetScriptGui(Concatenate('hud_mana_',Scope.GetFlagName)).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End) )]"
							text = "[Localize(Concatenate(Concatenate('mana_breakdown_',Scope.GetFlagName),'_amount'))]"
							align = right
						}
					}
				}
			}

			text_single = {
				block "not_datamodel_has_items" {}
				layoutpolicy_horizontal = expanding
				block "no_values" {
					text = "VALUE_BREAKDOWN_NO_VALUES"
				}
				default_format = "#weak"
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				margin_top = 10

				divider_light = {
					layoutpolicy_horizontal = expanding
				}

				hbox = {
					block "datamodel_has_items" {}
					layoutpolicy_horizontal = expanding

					text_single = {
						visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						layoutpolicy_horizontal = expanding

						text = "VALUE_BREAKDOWN_TOTAL"
					}

					text_single = {
						block "breakdown_total" {}
						default_format = "#high"
					}
				}
			}
		}
	}

	type widget_gen_breakdown_tooltip = widget {
		name = "gen_values_grid"
		size = { 50 50 }
		alwaystransparent = no

		background = {
			using = Background_Area_Border_Solid
		}

		vbox = {
			block "datamodel" {}
			alwaystransparent = no
			set_parent_size_to_minimum = yes
			margin = { 17 10 }
			spacing = 3

			item = {
				hbox = {
					name = "value_breakdown"
					layoutpolicy_horizontal = expanding

					text_single = {
						name = "name"
						layoutpolicy_horizontal = expanding
						text = "[Localize(Scope.GetFlagName)]"
						min_width = 180
						max_width = 250
						fonttintcolor = "[TooltipInfo.GetTintColor]"
						margin_right = 10
					}

					text_single= {
						visible = "[And(ValueBreakdown.HasTooltip, ValueBreakdown.ShouldShowValue)]"
						name = "value_with_tooltip"
						text = "[ValueBreakdown.GetValue|L]"
						align = right
						fonttintcolor = "[TooltipInfo.GetTintColor]"

						using = tooltip_below

						tooltipwidget = {
							recursive = yes

							widget_value_breakdown_tooltip = {}
						}
					}

					text_single = {
						visible = "[And( Not(ValueBreakdown.HasTooltip), ValueBreakdown.ShouldShowValue )]"
						name = "value_with_no_tooltip"
						text = "[ValueBreakdown.GetValue]"
						align = right
						fonttintcolor = "[TooltipInfo.GetTintColor]"
					}
				}
			}
		}
	}
}
